# Vector of strings
fruits <- c("banana", "apple", "orange")
Data_Frame <- data.frame (
Training = c("Strength", "Stamina", "Other"),
Pulse = c(100, 150, 120),
Duration = c(60, 30, 45)
)
View(Data_Frame)
# Charger le fichier XML
xml_doc <- xmlParse(xmlFilePath)
# Trouver toutes les balises <persName>
persName_nodes <- getNodeSet(xml_doc, "//persName")
install.packages("XML")
install.packages("dplyr")
# Initialiser une liste pour stocker les informations
persName_list <- list()
View(Data_Frame)
# Trouver toutes les balises <persName>
persName_nodes <- getNodeSet(xml_doc, "//persName")
# Initialiser une liste pour stocker les informations
persName_list <- list()
# Parcourir chaque balise <persName>
for (node in persName_nodes) {
key <- xmlGetAttr(node, "key")
text <- xmlValue(node)
persName_list <- append(persName_list, list(c(key, text)))
}
# Convertir la liste en DataFrame
df <- data.frame(matrix(unlist(persName_list), nrow=length(persName_list), byrow=T), stringsAsFactors=FALSE)
colnames(df) <- c("Noms", paste0("Variante", seq(1, ncol(df)-1)))
return(df)
# Fonction pour charger le fichier XML et extraire les informations des balises <persName>
extract_persName_info <- function(xmlFilePath) {
# Charger le fichier XML
xml_doc <- xmlParse(xmlFilePath)
# Trouver toutes les balises <persName>
persName_nodes <- getNodeSet(xml_doc, "//persName")
# Initialiser une liste pour stocker les informations
persName_list <- list()
# Parcourir chaque balise <persName>
for (node in persName_nodes) {
key <- xmlGetAttr(node, "key")
text <- xmlValue(node)
persName_list <- append(persName_list, list(c(key, text)))
}
# Convertir la liste en DataFrame
df <- data.frame(matrix(unlist(persName_list), nrow=length(persName_list), byrow=T), stringsAsFactors=FALSE)
colnames(df) <- c("Noms", paste0("Variante", seq(1, ncol(df)-1)))
return(df)
}
# Utilisation
xmlFilePath <- "source.xml"
persName_df <- extract_persName_info(xmlFilePath)
# Afficher le résultat
print(persName_df)
reticulate::repl_python()
setwd("~/Documents/GitHub/kanor")
setwd("~/Documents/GitHub/kanor/TEI")
setwd("~/Documents/GitHub/kanor/TEI")
reticulate::repl_python()
library(XML)
library(tidyverse)
install.packages("tidyverse")
> setwd("~/Documents/GitHub/kanor/TEI")
xml_file_path = input("source.xml")
# Parser le fichier .xml
xml_data <- xmlParse(xml_file_path)
xml_file_path <- readline("source.xml")
xml_data <- xmlParse(xml_file_path)
print(pers_names)
# Parser le fichier .xml
xml_data <- xmlParse(xml_file_path)
# Afficher la racine pour vérifier que le fichier est bien lu
print(root_node)
# Parser le fichier .xml
xml_data <- xmlParse(xml_file_path)
xml_file_path <- readline("/source.xml")
xml_data <- xmlParse(xml_file_path)
root_node <- xmlRoot(xml_data)
# Afficher les balises <persName>
pers_names <- getNodeSet(root_node, "//persName")
