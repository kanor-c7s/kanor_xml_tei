namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace math = "http://www.w3.org/1998/Math/MathML"
namespace ns1 = "http://www.w3.org/1999/xhtml"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace s = "http://purl.oclc.org/dsdl/schematron"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
namespace svg = "http://www.w3.org/2000/svg"
default namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xi = "http://www.w3.org/2001/XInclude"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2024-10-05T12:35:50Z. . 
# TEI Edition: P5 Version 4.7.0. Last updated on 16th November 2023, revision e5dd73ed0 
# TEI Edition Location: https://www.tei-c.org/Vault/P5/4.7.0/ 
#

# Usage pour les membres de l'équipe.
macro.paraContent = (text | model.paraPart)*
macro.limitedContent = (text | model.limitedPhrase | model.inter)*
macro.phraseSeq =
  (text
   | model.gLike
   | model.attributable
   | model.phrase
   | model.global)*
macro.phraseSeq.limited = (text | model.limitedPhrase | model.global)*
macro.specialPara =
  (text
   | model.gLike
   | model.phrase
   | model.inter
   | model.divPart
   | model.global)*
macro.xtext = (text | model.gLike)*
att.anchoring.attributes =
  att.anchoring.attribute.anchored, att.anchoring.attribute.targetEnd
att.anchoring.attribute.anchored =
  
  ## (anchored) indicates whether the copy text shows the exact place of reference for the note.
  [ a:defaultValue = "true" ] attribute anchored { xsd:boolean }?
att.anchoring.attribute.targetEnd =
  
  ## (target end) points to the end of the span to which the note is attached, if the note is not embedded in the text at that point.
  attribute targetEnd {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.ascribed.attributes = att.ascribed.attribute.who
att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.ascribed.directed.attribute.toWhom =
  
  ## indicates the person, or group of people, to whom a speech act or action is directed.
  attribute toWhom {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.canonical.attributes =
  att.canonical.attribute.key, att.canonical.attribute.ref
att.canonical.attribute.key =
  
  ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
  attribute key { xsd:string }?
att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition or identity for the entity being named by means of one or more URIs.
  attribute ref {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.ranging.attributes =
  att.ranging.attribute.atLeast,
  att.ranging.attribute.atMost,
  att.ranging.attribute.min,
  att.ranging.attribute.max,
  att.ranging.attribute.confidence
att.ranging.attribute.atLeast =
  
  ## gives a minimum estimated value for the approximate measurement.
  attribute atLeast {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.atMost =
  
  ## gives a maximum estimated value for the approximate measurement.
  attribute atMost {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.min =
  
  ## where the measurement summarizes more than one observation or a range, supplies the minimum value observed.
  attribute min {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.max =
  
  ## where the measurement summarizes more than one observation or a range, supplies the maximum value observed.
  attribute max {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.confidence =
  [
    a:documentation [
      "specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by "
      ns1:code [ "@min" ]
      " and "
      ns1:code [ "@max" ]
      ", or the proportion of observed values that fall within that range."
    ]
  ]
  attribute confidence { xsd:double }?
att.dimensions.attributes =
  att.ranging.attributes,
  att.dimensions.attribute.unit,
  att.dimensions.attribute.quantity,
  att.dimensions.attribute.extent,
  att.dimensions.attribute.precision,
  att.dimensions.attribute.scope
att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## Suggested values include: 1] cm (centimetres); 2] mm (millimetres); 3] in (inches); 4] line; 5] char (characters)
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "line"
    | 
      ## (characters) characters of text
      "char"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.dimensions.attribute.quantity =
  
  ## specifies the length in the units specified
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.dimensions.attribute.extent =
  
  ## indicates the size of the object concerned using a project-specific vocabulary combining quantity and units in a single string of words.
  attribute extent { xsd:string }?
att.dimensions.attribute.precision =
  
  ## characterizes the precision of the values specified by the other attributes.
  attribute precision {
    
    ##
    "high"
    | 
      ##
      "medium"
    | 
      ##
      "low"
    | 
      ##
      "unknown"
  }?
att.dimensions.attribute.scope =
  
  ## where the measurement summarizes more than one observation, specifies the applicability of this measurement.
  ## Sample values include: 1] all; 2] most; 3] range
  attribute scope {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.written.attributes = att.written.attribute.hand
att.written.attribute.hand =
  [
    a:documentation [
      "points to a "
      ns1:code [ "<handNote>" ]
      " element describing the hand considered responsible for the content of the element concerned."
    ]
  ]
  attribute hand {
    xsd:anyURI { pattern = "\S+" }
  }?
att.damaged.attributes =
  att.dimensions.attributes,
  att.written.attributes,
  att.damaged.attribute.agent,
  att.damaged.attribute.degree,
  att.damaged.attribute.group
att.damaged.attribute.agent =
  
  ## categorizes the cause of the damage, if it can be identified.
  ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
  attribute agent {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.damaged.attribute.degree =
  [
    a:documentation [
      "provides a coded representation of the degree of damage, either as a number between 0 (undamaged) and 1 (very extensively damaged), or as one of the codes high, medium, low, or unknown. The "
      ns1:code [ "<damage>" ]
      " element with the "
      ns1:code [ "@degree" ]
      " attribute should only be used where the text may be read with some confidence; text supplied from other sources should be tagged as "
      ns1:code [ "<supplied>" ]
      "."
    ]
  ]
  attribute degree {
    xsd:double
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
att.damaged.attribute.group =
  
  ## assigns an arbitrary number to each stretch of damage regarded as forming part of the same physical phenomenon.
  attribute group { xsd:nonNegativeInteger }?
att.breaking.attributes = att.breaking.attribute.break
att.breaking.attribute.break =
  
  ## indicates whether or not the element bearing this attribute should be considered to mark the end of an orthographic token in the same way as whitespace.
  attribute break {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.cReferencing.attributes = att.cReferencing.attribute.cRef
att.cReferencing.attribute.cRef =
  [
    a:documentation [
      "(canonical reference) specifies the destination of the pointer by supplying a canonical reference expressed using the scheme defined in a "
      ns1:code [ "<refsDecl>" ]
      " element in the TEI header"
    ]
  ]
  attribute cRef { xsd:string }?
att.datable.w3c.attributes =
  att.datable.w3c.attribute.when,
  att.datable.w3c.attribute.notBefore,
  att.datable.w3c.attribute.notAfter,
  att.datable.w3c.attribute.from,
  att.datable.w3c.attribute.to
att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
s:pattern [
  id =
    "septSages-att.datable.w3c-att-datable-w3c-when-constraint-rule-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@when]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notBefore|@notAfter|@from|@to"
      role = "nonfatal"
      "The @when attribute cannot be used with any other att.datable.w3c attributes."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
s:pattern [
  id =
    "septSages-att.datable.w3c-att-datable-w3c-from-constraint-rule-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@from]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notBefore"
      role = "nonfatal"
      "The @from and @notBefore attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
s:pattern [
  id = "septSages-att.datable.w3c-att-datable-w3c-to-constraint-rule-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@to]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notAfter"
      role = "nonfatal"
      "The @to and @notAfter attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.datable.attributes =
  att.datable.w3c.attributes,
  att.datable.iso.attributes,
  att.datable.custom.attributes,
  att.datable.attribute.period
att.datable.attribute.period =
  [
    a:documentation [
      "supplies pointers to one or more definitions of named periods of time (typically "
      ns1:code [ "<category>" ]
      "s, "
      ns1:code [ "<date>" ]
      "s or "
      ns1:code [ "<event>" ]
      "s) within which the datable item is understood to have occurred."
    ]
  ]
  attribute period {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.datcat.attributes =
  att.datcat.attribute.datcat,
  att.datcat.attribute.valueDatcat,
  att.datcat.attribute.targetDatcat
att.datcat.attribute.datcat =
  [
    a:documentation [
      "provides a pointer to a definition of, and/or general information about, (a) an information container (element or attribute) or (b) a value of an information container (element content or attribute value), by referencing an external taxonomy or ontology. If "
      ns1:code [ "@valueDatcat" ]
      " is present in the immediate context, this attribute takes on role (a), while "
      ns1:code [ "@valueDatcat" ]
      " performs role (b)."
    ]
  ]
  attribute datcat {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.datcat.attribute.valueDatcat =
  [
    a:documentation [
      "provides a definition of, and/or general information about a value of an information container (element content or attribute value), by reference to an external taxonomy or ontology. Used especially where a contrast with "
      ns1:code [ "@datcat" ]
      " is needed."
    ]
  ]
  attribute valueDatcat {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.datcat.attribute.targetDatcat =
  [
    a:documentation [
      "provides a definition of, and/or general information about, information structure of an object referenced or modeled by the containing element, by reference to an external taxonomy or ontology. This attribute has the characteristics of the "
      ns1:code [ "@datcat" ]
      " attribute, except that it addresses not its containing element, but an object that is being referenced or modeled by its containing element."
    ]
  ]
  attribute targetDatcat {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.declarable.attributes = att.declarable.attribute.default
att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when its parent is selected.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## This element is selected if its parent is selected
    "true"
    | 
      ## This element can only be selected explicitly, unless it is the only one of its kind, in which case it is selected if its parent is selected.
      "false"
  }?
att.declaring.attributes = att.declaring.attribute.decls
att.declaring.attribute.decls =
  
  ## (declarations) identifies one or more declarable elements within the header, which are understood to apply to the element bearing this attribute and its content.
  attribute decls {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.fragmentable.attributes = att.fragmentable.attribute.part
att.fragmentable.attribute.part =
  
  ## specifies whether or not its parent element is fragmented in some way, typically by some other overlapping structure: for example a speech which is divided between two or more verse stanzas, a paragraph which is split across a page division, a verse line which is divided between two speakers.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the element is fragmented in some (unspecified) respect
    "Y"
    | 
      ## (no) the element is not fragmented, or no claim is made as to its completeness
      "N"
    | 
      ## (initial) this is the initial part of a fragmented element
      "I"
    | 
      ## (medial) this is a medial part of a fragmented element
      "M"
    | 
      ## (final) this is the final part of a fragmented element
      "F"
  }?
att.divLike.attributes =
  att.fragmentable.attributes,
  att.divLike.attribute.org,
  att.divLike.attribute.sample
att.divLike.attribute.org =
  
  ## (organization) specifies how the content of the division is organized.
  [ a:defaultValue = "uniform" ]
  attribute org {
    
    ## no claim is made about the sequence in which the immediate contents of this division are to be processed, or their inter-relationships.
    "composite"
    | 
      ## the immediate contents of this element are regarded as forming a logical unit, to be processed in sequence.
      "uniform"
  }?
att.divLike.attribute.sample =
  
  ## indicates whether this division is a sample of the original source and if so, from which part.
  [ a:defaultValue = "complete" ]
  attribute sample {
    
    ## division lacks material present at end in source.
    "initial"
    | 
      ## division lacks material at start and end.
      "medial"
    | 
      ## division lacks material at start.
      "final"
    | 
      ## position of sampled material within original unknown.
      "unknown"
    | 
      ## division is not a sample.
      "complete"
  }?
att.docStatus.attributes = att.docStatus.attribute.status
att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ]
  attribute status {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.global.responsibility.attributes =
  att.global.responsibility.attribute.cert,
  att.global.responsibility.attribute.resp
att.global.responsibility.attribute.cert =
  
  ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
  attribute cert {
    xsd:double
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
att.global.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.editLike.attributes =
  att.editLike.attribute.evidence, att.editLike.attribute.instant
att.editLike.attribute.evidence =
  
  ## indicates the nature of the evidence supporting the reliability or accuracy of the intervention or interpretation.
  ## Suggested values include: 1] internal; 2] external; 3] conjecture
  attribute evidence {
    list {
      (
       ## there is internal evidence to support the intervention.
       "internal"
       | 
         ## there is external evidence to support the intervention.
         "external"
       | 
         ## the intervention or interpretation has been made by the editor, cataloguer, or scholar on the basis of their expertise.
         "conjecture"
       | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
    }
  }?
att.editLike.attribute.instant =
  
  ## indicates whether this is an instant revision or not.
  [ a:defaultValue = "false" ]
  attribute instant {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
att.global.rendition.attributes =
  att.global.rendition.attribute.rend,
  att.global.rendition.attribute.style,
  att.global.rendition.attribute.rendition
att.global.rendition.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or presented in the source text.
  attribute rend {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
att.global.rendition.attribute.style =
  
  ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
  attribute style { xsd:string }?
att.global.rendition.attribute.rendition =
  
  ## points to a description of the rendering or presentation used for this element in the source text.
  attribute rendition {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.global.source.attributes = att.global.source.attribute.source
att.global.source.attribute.source =
  
  ## specifies the source from which some aspect of this element is drawn.
  attribute source {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
s:pattern [
  id =
    "septSages-att.global.source-source-only_1_ODD_source-constraint-rule-4"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@source]"
    "\x{a}" ~
    "         "
    sch:let [
      name = "srcs"
      value = "tokenize( normalize-space(@source),' ')"
    ]
    "\x{a}" ~
    "         "
    sch:report [
      test =
        "( self::tei:classRef               | self::tei:dataRef               | self::tei:elementRef               | self::tei:macroRef               | self::tei:moduleRef               | self::tei:schemaSpec )               and               $srcs[2]"
      "\x{a}" ~
      "              When used on a schema description element (like\x{a}" ~
      "              "
      sch:value-of [ select = "name(.)" ]
      "), the @source attribute\x{a}" ~
      "              should have only 1 value. (This one has "
      sch:value-of [ select = "count($srcs)" ]
      ".)\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.global.attributes =
  att.global.rendition.attributes,
  att.global.linking.attributes,
  att.global.analytic.attributes,
  att.global.facs.attributes,
  att.global.change.attributes,
  att.global.responsibility.attributes,
  att.global.source.attributes,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.xmlbase,
  att.global.attribute.xmlspace
att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
  attribute n { xsd:string }?
att.global.attribute.xmllang =
  [
    a:documentation [
      "(language) indicates the language of the element content using a tag generated according to "
      ns1:a [
        href = "http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
        "BCP 47"
      ]
      "."
    ]
  ]
  attribute xml:lang {
    xsd:language
    | (
       ##
       "")
  }?
att.global.attribute.xmlbase =
  
  ## provides a base URI reference with which applications can resolve relative URI references into absolute URI references.
  attribute xml:base {
    xsd:anyURI { pattern = "\S+" }
  }?
att.global.attribute.xmlspace =
  
  ## signals an intention about how white space should be managed by applications.
  attribute xml:space {
    
    ## signals that the application's default white-space processing modes are acceptable
    "default"
    | 
      ## indicates the intent that applications preserve all white space
      "preserve"
  }?
att.handFeatures.attributes =
  att.handFeatures.attribute.scribe,
  att.handFeatures.attribute.scribeRef,
  att.handFeatures.attribute.script,
  att.handFeatures.attribute.scriptRef,
  att.handFeatures.attribute.medium,
  att.handFeatures.attribute.scope
att.handFeatures.attribute.scribe =
  
  ## gives a name or other identifier for the scribe believed to be responsible for this hand.
  attribute scribe { xsd:Name }?
att.handFeatures.attribute.scribeRef =
  [
    a:documentation [
      "points to a full description of the scribe concerned, typically supplied by a "
      ns1:code [ "<person>" ]
      " element elsewhere in the description."
    ]
  ]
  attribute scribeRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.handFeatures.attribute.script =
  
  ## characterizes the particular script or writing style used by this hand, for example secretary, copperplate, Chancery, Italian, etc.
  attribute script {
    list { xsd:Name+ }
  }?
att.handFeatures.attribute.scriptRef =
  [
    a:documentation [
      "points to a full description of the script or writing style used by this hand, typically supplied by a "
      ns1:code [ "<scriptNote>" ]
      " element elsewhere in the description."
    ]
  ]
  attribute scriptRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.handFeatures.attribute.medium =
  
  ## describes the tint or type of ink, e.g. brown, or other writing medium, e.g. pencil
  attribute medium {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
att.handFeatures.attribute.scope =
  
  ## specifies how widely this hand is used in the manuscript.
  attribute scope {
    
    ## only this hand is used throughout the manuscript
    "sole"
    | 
      ## this hand is used through most of the manuscript
      "major"
    | 
      ## this hand is used occasionally in the manuscript
      "minor"
  }?
att.internetMedia.attributes = att.internetMedia.attribute.mimeType
att.internetMedia.attribute.mimeType =
  
  ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
  attribute mimeType {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
att.naming.attributes =
  att.canonical.attributes,
  att.naming.attribute.role,
  att.naming.attribute.nymRef
att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
  attribute role {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form (nym) of the names associated with the object named by the element bearing it.
  attribute nymRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.notated.attributes = att.notated.attribute.notation
att.notated.attribute.notation =
  
  ## names the notation used for the content of the element.
  attribute notation {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.placement.attributes = att.placement.attribute.place
att.placement.attribute.place =
  
  ## specifies where this item is placed.
  ## Suggested values include: 1] top; 2] bottom; 3] margin; 4] opposite; 5] overleaf; 6] above; 7] right; 8] below; 9] left; 10] end; 11] inline; 12] inspace
  attribute place {
    list {
      (
       ## at the top of the page
       "top"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## to the right, e.g. to the right of a vertical line of text, or to the right of a figure
         "right"
       | 
         ## below the line
         "below"
       | 
         ## to the left, e.g. to the left of a vertical line of text, or to the left of a figure
         "left"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ## in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
    }
  }?
att.typed.attributes =
  att.typed.attribute.type, att.typed.attribute.subtype
att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient classification scheme or typology.
  attribute type {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.typed.attribute.subtype =
  
  ## (subtype) provides a sub-categorization of the element, if needed
  attribute subtype {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
s:pattern [
  id = "septSages-att.typed-subtypeTyped-constraint-rule-5"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@subtype]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attributes =
  att.pointing.attribute.targetLang,
  att.pointing.attribute.target,
  att.pointing.attribute.evaluate
att.pointing.attribute.targetLang =
  [
    a:documentation [
      "specifies the language of the content to be found at the destination referenced by "
      ns1:code [ "@target" ]
      ", using a language tag generated according to "
      ns1:a [
        href = "http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
        "BCP 47"
      ]
      "."
    ]
  ]
  attribute targetLang {
    xsd:language
    | (
       ##
       "")
  }?
s:pattern [
  id = "septSages-att.pointing-targetLang-targetLang-constraint-rule-6"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@target"
      "@targetLang should only be used on "
      sch:name [ ]
      " if @target is specified."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References
  attribute target {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.pointing.attribute.evaluate =
  
  ## (evaluate) specifies the intended meaning when the target of a pointer is itself a pointer.
  attribute evaluate {
    
    ## if the element pointed to is itself a pointer, then the target of that pointer will be taken, and so on, until an element is found which is not a pointer.
    "all"
    | 
      ## if the element pointed to is itself a pointer, then its target (whether a pointer or not) is taken as the target of this pointer.
      "one"
    | 
      ## no further evaluation of targets is carried out beyond that needed to find the element specified in the pointer's target.
      "none"
  }?
att.segLike.attributes =
  att.datcat.attributes,
  att.fragmentable.attributes,
  att.segLike.attribute.function
att.segLike.attribute.function =
  
  ## (function) characterizes the function of the segment.
  attribute function {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.sortable.attributes = att.sortable.attribute.sortKey
att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.edition.attributes =
  att.edition.attribute.ed, att.edition.attribute.edRef
att.edition.attribute.ed =
  
  ## (edition) supplies a sigil or other arbitrary identifier for the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute ed {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
att.edition.attribute.edRef =
  
  ## (edition reference) provides a pointer to the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute edRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.spanning.attributes = att.spanning.attribute.spanTo
att.spanning.attribute.spanTo =
  
  ## indicates the end of a span initiated by the element bearing this attribute.
  attribute spanTo {
    xsd:anyURI { pattern = "\S+" }
  }?
s:pattern [
  id =
    "septSages-att.spanning-spanTo-spanTo-points-to-following-constraint-rule-7"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@spanTo]"
    "\x{a}" ~
    "         "
    sch:assert [
      test =
        "id(substring(@spanTo,2)) and following::*[@xml:id=substring(current()/@spanTo,2)]"
      "\x{a}" ~
      "The element indicated by @spanTo ("
      sch:value-of [ select = "@spanTo" ]
      ") must follow the current element "
      sch:name [ ]
      "\x{a}" ~
      "         "
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.timed.attributes =
  att.timed.attribute.start, att.timed.attribute.end
att.timed.attribute.start =
  
  ## indicates the location within a temporal alignment at which this element begins.
  attribute start {
    xsd:anyURI { pattern = "\S+" }
  }?
att.timed.attribute.end =
  
  ## indicates the location within a temporal alignment at which this element ends.
  attribute end {
    xsd:anyURI { pattern = "\S+" }
  }?
att.transcriptional.attributes =
  att.editLike.attributes,
  att.written.attributes,
  att.transcriptional.attribute.status,
  att.transcriptional.attribute.cause,
  att.transcriptional.attribute.seq
att.transcriptional.attribute.status =
  
  ## indicates the effect of the intervention, for example in the case of a deletion, strikeouts which include too much or too little text, or in the case of an addition, an insertion which duplicates some of the text already present.
  ## Sample values include: 1] duplicate; 2] duplicate-partial; 3] excessStart; 4] excessEnd; 5] shortStart; 6] shortEnd; 7] partial; 8] unremarkable
  [ a:defaultValue = "unremarkable" ]
  attribute status {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.transcriptional.attribute.cause =
  
  ## documents the presumed cause for the intervention.
  attribute cause {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.transcriptional.attribute.seq =
  
  ## (sequence) assigns a sequence number related to the order in which the encoded features carrying this attribute are believed to have occurred.
  attribute seq { xsd:nonNegativeInteger }?
model.nameLike.agent = name | persName
model.nameLike.agent_alternation = name | persName
model.nameLike.agent_sequence = name, persName
model.nameLike.agent_sequenceOptional = name?, persName?
model.nameLike.agent_sequenceOptionalRepeatable = name*, persName*
model.nameLike.agent_sequenceRepeatable = name+, persName+
model.segLike = seg | c
model.segLike_alternation = seg | c
model.segLike_sequence = seg, c
model.segLike_sequenceOptional = seg?, c?
model.segLike_sequenceOptionalRepeatable = seg*, c*
model.segLike_sequenceRepeatable = seg+, c+
model.hiLike = hi
model.hiLike_alternation = hi
model.hiLike_sequence = hi
model.hiLike_sequenceOptional = hi?
model.hiLike_sequenceOptionalRepeatable = hi*
model.hiLike_sequenceRepeatable = hi+
model.emphLike = title
model.emphLike_alternation = title
model.emphLike_sequence = title
model.emphLike_sequenceOptional = title?
model.emphLike_sequenceOptionalRepeatable = title*
model.emphLike_sequenceRepeatable = title+
model.highlighted = model.hiLike | model.emphLike
model.highlighted_alternation =
  model.hiLike_alternation | model.emphLike_alternation
model.highlighted_sequence =
  model.hiLike_sequence, model.emphLike_sequence
model.highlighted_sequenceOptional =
  model.hiLike_sequenceOptional?, model.emphLike_sequenceOptional?
model.highlighted_sequenceOptionalRepeatable =
  model.hiLike_sequenceOptionalRepeatable*,
  model.emphLike_sequenceOptionalRepeatable*
model.highlighted_sequenceRepeatable =
  model.hiLike_sequenceRepeatable+, model.emphLike_sequenceRepeatable+
model.dateLike = date
model.dateLike_alternation = date
model.dateLike_sequence = date
model.dateLike_sequenceOptional = date?
model.dateLike_sequenceOptionalRepeatable = date*
model.dateLike_sequenceRepeatable = date+
model.dimLike = height | width
model.measureLike = num | height | width
model.measureLike_alternation = num | height | width
model.measureLike_sequence = num, height, width
model.measureLike_sequenceOptional = num?, height?, width?
model.measureLike_sequenceOptionalRepeatable = num*, height*, width*
model.measureLike_sequenceRepeatable = num+, height+, width+
model.egLike = notAllowed
model.egLike_alternation = notAllowed
model.egLike_sequence = empty
model.egLike_sequenceOptional = empty
model.egLike_sequenceOptionalRepeatable = empty
model.egLike_sequenceRepeatable = notAllowed
model.graphicLike = notAllowed
model.graphicLike_alternation = notAllowed
model.graphicLike_sequence = empty
model.graphicLike_sequenceOptional = empty
model.graphicLike_sequenceOptionalRepeatable = empty
model.graphicLike_sequenceRepeatable = notAllowed
model.offsetLike = notAllowed
model.offsetLike_alternation = notAllowed
model.offsetLike_sequence = empty
model.offsetLike_sequenceOptional = empty
model.offsetLike_sequenceOptionalRepeatable = empty
model.offsetLike_sequenceRepeatable = notAllowed
model.pPart.msdesc = dimensions | locus | locusGrp
model.pPart.msdesc_alternation = dimensions | locus | locusGrp
model.pPart.msdesc_sequence = dimensions, locus, locusGrp
model.pPart.msdesc_sequenceOptional = dimensions?, locus?, locusGrp?
model.pPart.msdesc_sequenceOptionalRepeatable =
  dimensions*, locus*, locusGrp*
model.pPart.msdesc_sequenceRepeatable = dimensions+, locus+, locusGrp+
model.pPart.editorial = choice | subst
model.pPart.editorial_alternation = choice | subst
model.pPart.editorial_sequence = choice, subst
model.pPart.editorial_sequenceOptional = choice?, subst?
model.pPart.editorial_sequenceOptionalRepeatable = choice*, subst*
model.pPart.editorial_sequenceRepeatable = choice+, subst+
model.pPart.transcriptional =
  sic
  | corr
  | reg
  | orig
  | add
  | del
  | unclear
  | damage
  | handShift
  | supplied
  | surplus
model.pPart.transcriptional_alternation =
  sic
  | corr
  | reg
  | orig
  | add
  | del
  | unclear
  | damage
  | handShift
  | supplied
  | surplus
model.pPart.transcriptional_sequence =
  sic,
  corr,
  reg,
  orig,
  add,
  del,
  unclear,
  damage,
  handShift,
  supplied,
  surplus
model.pPart.transcriptional_sequenceOptional =
  sic?,
  corr?,
  reg?,
  orig?,
  add?,
  del?,
  unclear?,
  damage?,
  handShift?,
  supplied?,
  surplus?
model.pPart.transcriptional_sequenceOptionalRepeatable =
  sic*,
  corr*,
  reg*,
  orig*,
  add*,
  del*,
  unclear*,
  damage*,
  handShift*,
  supplied*,
  surplus*
model.pPart.transcriptional_sequenceRepeatable =
  sic+,
  corr+,
  reg+,
  orig+,
  add+,
  del+,
  unclear+,
  damage+,
  handShift+,
  supplied+,
  surplus+
model.pPart.edit = model.pPart.editorial | model.pPart.transcriptional
model.pPart.edit_alternation =
  model.pPart.editorial_alternation
  | model.pPart.transcriptional_alternation
model.pPart.edit_sequence =
  model.pPart.editorial_sequence, model.pPart.transcriptional_sequence
model.pPart.edit_sequenceOptional =
  model.pPart.editorial_sequenceOptional?,
  model.pPart.transcriptional_sequenceOptional?
model.pPart.edit_sequenceOptionalRepeatable =
  model.pPart.editorial_sequenceOptionalRepeatable*,
  model.pPart.transcriptional_sequenceOptionalRepeatable*
model.pPart.edit_sequenceRepeatable =
  model.pPart.editorial_sequenceRepeatable+,
  model.pPart.transcriptional_sequenceRepeatable+
model.ptrLike = ref
model.ptrLike_alternation = ref
model.ptrLike_sequence = ref
model.ptrLike_sequenceOptional = ref?
model.ptrLike_sequenceOptionalRepeatable = ref*
model.ptrLike_sequenceRepeatable = ref+
model.lPart = notAllowed
model.lPart_alternation = notAllowed
model.lPart_sequence = empty
model.lPart_sequenceOptional = empty
model.lPart_sequenceOptionalRepeatable = empty
model.lPart_sequenceRepeatable = notAllowed
model.global.meta = notAllowed
model.global.meta_alternation = notAllowed
model.global.meta_sequence = empty
model.global.meta_sequenceOptional = empty
model.global.meta_sequenceOptionalRepeatable = empty
model.global.meta_sequenceRepeatable = notAllowed
model.milestoneLike = pb | cb | anchor
model.milestoneLike_alternation = pb | cb | anchor
model.milestoneLike_sequence = pb, cb, anchor
model.milestoneLike_sequenceOptional = pb?, cb?, anchor?
model.milestoneLike_sequenceOptionalRepeatable = pb*, cb*, anchor*
model.milestoneLike_sequenceRepeatable = pb+, cb+, anchor+
model.gLike = notAllowed
model.oddDecl = notAllowed
model.oddDecl_alternation = notAllowed
model.oddDecl_sequence = empty
model.oddDecl_sequenceOptional = empty
model.oddDecl_sequenceOptionalRepeatable = empty
model.oddDecl_sequenceRepeatable = notAllowed
model.phrase.xml = notAllowed
model.phrase.xml_alternation = notAllowed
model.phrase.xml_sequence = empty
model.phrase.xml_sequenceOptional = empty
model.phrase.xml_sequenceOptionalRepeatable = empty
model.phrase.xml_sequenceRepeatable = notAllowed
model.specDescLike = notAllowed
model.specDescLike_alternation = notAllowed
model.specDescLike_sequence = empty
model.specDescLike_sequenceOptional = empty
model.specDescLike_sequenceOptionalRepeatable = empty
model.specDescLike_sequenceRepeatable = notAllowed
model.biblLike = msDesc
model.biblLike_alternation = msDesc
model.biblLike_sequence = msDesc
model.biblLike_sequenceOptional = msDesc?
model.biblLike_sequenceOptionalRepeatable = msDesc*
model.biblLike_sequenceRepeatable = msDesc+
model.headLike = head
model.headLike_alternation = head
model.headLike_sequence = head
model.headLike_sequenceOptional = head?
model.headLike_sequenceOptionalRepeatable = head*
model.headLike_sequenceRepeatable = head+
model.labelLike = notAllowed
model.labelLike_alternation = notAllowed
model.labelLike_sequence = empty
model.labelLike_sequenceOptional = empty
model.labelLike_sequenceOptionalRepeatable = empty
model.labelLike_sequenceRepeatable = notAllowed
model.listLike = listWit
model.listLike_alternation = listWit
model.listLike_sequence = listWit
model.listLike_sequenceOptional = listWit?
model.listLike_sequenceOptionalRepeatable = listWit*
model.listLike_sequenceRepeatable = listWit+
model.noteLike = note
model.noteLike_alternation = note
model.noteLike_sequence = note
model.noteLike_sequenceOptional = note?
model.noteLike_sequenceOptionalRepeatable = note*
model.noteLike_sequenceRepeatable = note+
model.lLike = l
model.lLike_alternation = l
model.lLike_sequence = l
model.lLike_sequenceOptional = l?
model.lLike_sequenceOptionalRepeatable = l*
model.lLike_sequenceRepeatable = l+
model.pLike = p
model.pLike_alternation = p
model.pLike_sequence = p
model.pLike_sequenceOptional = p?
model.pLike_sequenceOptionalRepeatable = p*
model.pLike_sequenceRepeatable = p+
model.stageLike = notAllowed
model.stageLike_alternation = notAllowed
model.stageLike_sequence = empty
model.stageLike_sequenceOptional = empty
model.stageLike_sequenceOptionalRepeatable = empty
model.stageLike_sequenceRepeatable = notAllowed
model.global.edit = gap | app
model.global.edit_alternation = gap | app
model.global.edit_sequence = gap, app
model.global.edit_sequenceOptional = gap?, app?
model.global.edit_sequenceOptionalRepeatable = gap*, app*
model.global.edit_sequenceRepeatable = gap+, app+
model.divPart = model.lLike | model.pLike | lg
model.placeNamePart = placeName | country | settlement
model.placeNamePart_alternation = placeName | country | settlement
model.placeNamePart_sequence = placeName, country, settlement
model.placeNamePart_sequenceOptional = placeName?, country?, settlement?
model.placeNamePart_sequenceOptionalRepeatable =
  placeName*, country*, settlement*
model.placeNamePart_sequenceRepeatable =
  placeName+, country+, settlement+
model.placeStateLike = model.placeNamePart
model.placeStateLike_alternation = model.placeNamePart_alternation
model.placeStateLike_sequence = model.placeNamePart_sequence
model.placeStateLike_sequenceOptional =
  model.placeNamePart_sequenceOptional?
model.placeStateLike_sequenceOptionalRepeatable =
  model.placeNamePart_sequenceOptionalRepeatable*
model.placeStateLike_sequenceRepeatable =
  model.placeNamePart_sequenceRepeatable+
model.availabilityPart = licence
model.certLike = notAllowed
model.descLike = notAllowed
model.quoteLike = quote
model.quoteLike_alternation = quote
model.quoteLike_sequence = quote
model.quoteLike_sequenceOptional = quote?
model.quoteLike_sequenceOptionalRepeatable = quote*
model.quoteLike_sequenceRepeatable = quote+
model.attributable = model.quoteLike | said
model.attributable_alternation = model.quoteLike_alternation | said
model.attributable_sequence = model.quoteLike_sequence, said
model.attributable_sequenceOptional =
  model.quoteLike_sequenceOptional?, said?
model.attributable_sequenceOptionalRepeatable =
  model.quoteLike_sequenceOptionalRepeatable*, said*
model.attributable_sequenceRepeatable =
  model.quoteLike_sequenceRepeatable+, said+
model.respLike = author | respStmt
model.divWrapper = notAllowed
model.divTopPart = model.headLike
model.divTop = model.divWrapper | model.divTopPart
model.divBottomPart = notAllowed
model.divBottom = model.divWrapper | model.divBottomPart
model.titlepagePart = notAllowed
model.msQuoteLike = title | explicit | incipit | rubric
model.msItemPart =
  model.biblLike
  | model.quoteLike
  | model.respLike
  | model.msQuoteLike
  | textLang
  | idno
  | msItem
  | msItemStruct
  | decoNote
model.choicePart = sic | corr | reg | orig | unclear | seg | supplied
model.addressLike = notAllowed
model.addressLike_alternation = notAllowed
model.addressLike_sequence = empty
model.addressLike_sequenceOptional = empty
model.addressLike_sequenceOptionalRepeatable = empty
model.addressLike_sequenceRepeatable = notAllowed
model.nameLike =
  model.nameLike.agent
  | model.offsetLike
  | model.placeStateLike
  | rs
  | idno
  | model.persNamePart
model.nameLike_alternation =
  model.nameLike.agent_alternation
  | model.offsetLike_alternation
  | model.placeStateLike_alternation
  | rs
  | idno
  | model.persNamePart_alternation
model.nameLike_sequence =
  model.nameLike.agent_sequence,
  model.offsetLike_sequence,
  model.placeStateLike_sequence,
  rs,
  idno,
  model.persNamePart_sequence
model.nameLike_sequenceOptional =
  model.nameLike.agent_sequenceOptional?,
  model.offsetLike_sequenceOptional?,
  model.placeStateLike_sequenceOptional?,
  rs?,
  idno?,
  model.persNamePart_sequenceOptional?
model.nameLike_sequenceOptionalRepeatable =
  model.nameLike.agent_sequenceOptionalRepeatable*,
  model.offsetLike_sequenceOptionalRepeatable*,
  model.placeStateLike_sequenceOptionalRepeatable*,
  rs*,
  idno*,
  model.persNamePart_sequenceOptionalRepeatable*
model.nameLike_sequenceRepeatable =
  model.nameLike.agent_sequenceRepeatable+,
  model.offsetLike_sequenceRepeatable+,
  model.placeStateLike_sequenceRepeatable+,
  rs+,
  idno+,
  model.persNamePart_sequenceRepeatable+
model.global =
  model.global.meta
  | model.milestoneLike
  | model.noteLike
  | model.global.edit
  | figure
model.pPart.data =
  model.dateLike
  | model.measureLike
  | model.addressLike
  | model.nameLike
model.pPart.data_alternation =
  model.dateLike_alternation
  | model.measureLike_alternation
  | model.addressLike_alternation
  | model.nameLike_alternation
model.pPart.data_sequence =
  model.dateLike_sequence,
  model.measureLike_sequence,
  model.addressLike_sequence,
  model.nameLike_sequence
model.pPart.data_sequenceOptional =
  model.dateLike_sequenceOptional?,
  model.measureLike_sequenceOptional?,
  model.addressLike_sequenceOptional?,
  model.nameLike_sequenceOptional?
model.pPart.data_sequenceOptionalRepeatable =
  model.dateLike_sequenceOptionalRepeatable*,
  model.measureLike_sequenceOptionalRepeatable*,
  model.addressLike_sequenceOptionalRepeatable*,
  model.nameLike_sequenceOptionalRepeatable*
model.pPart.data_sequenceRepeatable =
  model.dateLike_sequenceRepeatable+,
  model.measureLike_sequenceRepeatable+,
  model.addressLike_sequenceRepeatable+,
  model.nameLike_sequenceRepeatable+
model.inter =
  model.egLike
  | model.oddDecl
  | model.biblLike
  | model.labelLike
  | model.listLike
  | model.stageLike
  | model.attributable
model.common = model.divPart | model.inter
model.phrase =
  model.segLike
  | model.highlighted
  | model.graphicLike
  | model.pPart.msdesc
  | model.pPart.edit
  | model.ptrLike
  | model.lPart
  | model.phrase.xml
  | model.specDescLike
  | model.pPart.data
model.paraPart =
  model.gLike
  | model.lLike
  | model.global
  | model.inter
  | model.phrase
  | lg
model.limitedPhrase =
  model.hiLike
  | model.emphLike
  | model.pPart.msdesc
  | model.pPart.editorial
  | model.ptrLike
  | model.phrase.xml
  | model.pPart.data
model.divLike = \div
model.divGenLike = notAllowed
model.div1Like = notAllowed
model.teiHeaderPart = encodingDesc | profileDesc
model.sourceDescPart = notAllowed
model.encodingDescPart = projectDesc | editorialDecl
model.editorialDeclPart =
  correction | normalization | hyphenation | segmentation | punctuation
model.profileDescPart = langUsage | handNotes
model.resource = \text
att.personal.attributes =
  att.naming.attributes,
  att.personal.attribute.full,
  att.personal.attribute.sort
att.personal.attribute.full =
  
  ## indicates whether the name component is given in full, as an abbreviation or simply as an initial.
  [ a:defaultValue = "yes" ]
  attribute full {
    
    ## (yes) the name component is spelled out in full.
    "yes"
    | 
      ## (abbreviated) the name component is given in an abbreviated form.
      "abb"
    | 
      ## (initial letter) the name component is indicated only by one initial.
      "init"
  }?
att.personal.attribute.sort =
  
  ## (sort) specifies the sort order of the name component in relation to others within the name.
  attribute sort { xsd:nonNegativeInteger }?
att.calendarSystem.attributes = att.calendarSystem.attribute.calendar
att.calendarSystem.attribute.calendar =
  
  ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
  attribute calendar {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
s:pattern [
  id =
    "septSages-att.calendarSystem-calendar-calendar-constraint-rule-8"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "string-length( normalize-space(.) ) gt 0"
      " @calendar indicates one or more\x{a}" ~
      "              systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
      "              but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
p =
  
  ## (paragraph) marks paragraphs in prose. [3.1. Paragraphs 7.2.5. Speech Contents]
  element p {
    macro.paraContent
    >> s:pattern [
         id = "septSages-p-p_n_check-constraint-rule-9"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:text//tei:p"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@n"
             role = "error"
             "Please add a @n attribute"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> s:pattern [
         id =
           "septSages-p-abstractModel-structure-p-in-ab-or-p-constraint-report-5"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:ab or ancestor::tei:p) and not( ancestor::tei:floatingText |parent::tei:exemplum |parent::tei:item |parent::tei:note |parent::tei:q |parent::tei:quote |parent::tei:remarks |parent::tei:said |parent::tei:sp |parent::tei:stage |parent::tei:cell |parent::tei:figure )"
             "\x{a}" ~
             "        Abstract model violation: Paragraphs may not occur inside other paragraphs or ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> s:pattern [
         id =
           "septSages-p-abstractModel-structure-p-in-l-or-lg-constraint-report-6"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:l or ancestor::tei:lg) and not( ancestor::tei:floatingText |parent::tei:figure |parent::tei:note )"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div, p, or ab, unless p is a child of figure or note, or is a descendant of floatingText.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.declaring.attributes,
    att.fragmentable.attributes,
    att.written.attributes,
    empty
  }
hi =
  
  ## (highlighted) marks a word or phrase as graphically distinct from the surrounding text, for reasons concerning which no claim is made. [3.3.2.2. Emphatic Words and Phrases 3.3.2. Emphasis, Foreign Words, and Unusual Language]
  element hi {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.style,
    att.global.rendition.attribute.rendition,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.written.attributes,
    
    ##
    attribute rend {
      
      ##
      "rubricated"
      | 
        ##
        "decorated-initial 2 red"
      | 
        ##
        "decorated-initial 3 red"
      | 
        ##
        "decorated-initial 4 red"
      | 
        ##
        "decorated-initial 5 red"
      | 
        ##
        "decorated-initial 6 red"
      | 
        ##
        "decorated-initial 7 red"
      | 
        ##
        "decorated-initial 8 red"
      | 
        ##
        "decorated-initial 9 red"
      | 
        ##
        "decorated-initial 2 blue"
      | 
        ##
        "decorated-initial 3 blue"
      | 
        ##
        "decorated-initial 4 blue"
      | 
        ##
        "decorated-initial 5 blue"
      | 
        ##
        "decorated-initial 6 blue"
      | 
        ##
        "decorated-initial 7 blue"
      | 
        ##
        "decorated-initial 8 blue"
      | 
        ##
        "decorated-initial 9 blue"
      | 
        ##
        "decorated-initial 11 red"
      | 
        ##
        "italic"
      | 
        ##
        "title"
      | 
        ##
        "exp"
    },
    empty
  }
said =
  
  ## (speech or thought) indicates passages thought or spoken aloud, whether explicitly indicated in the source or not, whether directly or indirectly reported, whether by real people or fictional characters. [3.3.3. Quotation]
  element said {
    macro.specialPara
    >> s:pattern [
         id = "septSages-said-character_aloud-constraint-rule-10"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:said[./not(@who)]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "./@aloud"
             "Aloud est obligatoire si c'est un personnage\x{a}" ~
             "                              qui parle qui parle"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> s:pattern [
         id = "septSages-said-character_direct1-constraint-rule-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:said[./not(@who)]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "./@direct"
             "Direct est obligatoire si c'est un\x{a}" ~
             "                              personnage qui parle qui parle"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.rendition.attribute.style,
    att.global.linking.attribute.corresp,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.analytic.attribute.ana,
    att.global.facs.attribute.facs,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.ascribed.directed.attribute.toWhom,
    
    ##
    attribute rendition {
      
      ##
      "dialogue"
    }?,
    
    ##
    attribute who {
      
      ##
      "#nar"
    }?,
    
    ##
    attribute aloud {
      
      ##
      "true"
      | 
        ##
        "false"
    }?,
    
    ##
    attribute direct {
      
      ##
      "true"
      | 
        ##
        "false"
    }?,
    empty
  }
quote =
  
  ## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external to the text. [3.3.3. Quotation 4.3.1. Grouped Texts]
  element quote {
    macro.specialPara,
    att.global.attributes,
    att.typed.attribute.subtype,
    att.msExcerpt.attributes,
    att.notated.attributes,
    
    ##
    attribute type {
      
      ##
      "proverbe"
    },
    empty
  }
sic =
  
  ## (Latin for thus or so) contains text reproduced although apparently incorrect or inaccurate. [3.5.1. Apparent Errors]
  element sic {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.rendition.attribute.style,
    att.global.rendition.attribute.rendition,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
corr =
  
  ## (correction) contains the correct form of a passage apparently erroneous in the copy text. [3.5.1. Apparent Errors]
  element corr {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.rendition.attribute.style,
    att.global.rendition.attribute.rendition,
    att.global.linking.attribute.corresp,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.analytic.attribute.ana,
    att.global.facs.attribute.facs,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.editLike.attributes,
    att.typed.attributes,
    
    ##
    attribute cert {
      
      ##
      "high"
      | 
        ##
        "low"
    },
    
    ##
    attribute resp {
      
      ##
      "#FPZ"
    },
    empty
  }
choice =
  
  ## (choice) groups a number of alternative encodings for the same point in a text. [3.5. Simple Editorial Changes]
  element choice {
    (model.choicePart | choice)+, att.global.attributes, empty
  }
reg =
  
  ## (Régularisation) permet d'encoder la forme régularisée. [3.5.2. Regularization and
  ## Normalization 12. Critical Apparatus]
  element reg {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.rendition.attribute.style,
    att.global.rendition.attribute.rendition,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.editLike.attributes,
    att.typed.attribute.subtype,
    empty
  }
orig =
  
  ## (original form) contains a reading which is marked as following the original, rather than being normalized or corrected. [3.5.2. Regularization and
  ## Normalization 12. Critical Apparatus]
  element orig {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.rendition.attribute.style,
    att.global.rendition.attribute.rendition,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
gap =
  
  ## (gap) indicates a point where material has been omitted in a transcription, whether for editorial reasons described in the TEI header, as part of sampling practice, or because the material is illegible, invisible, or inaudible. [3.5.3. Additions, Deletions, and Omissions]
  element gap {
    (model.descLike | model.certLike)*,
    att.global.attributes,
    att.timed.attributes,
    att.editLike.attributes,
    att.dimensions.attribute.unit,
    att.dimensions.attribute.quantity,
    att.dimensions.attribute.precision,
    att.dimensions.attribute.scope,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    
    ## indicates the size of the object concerned using a project-specific vocabulary combining quantity and units in a single string of words.
    attribute extent { xsd:string },
    
    ##
    attribute reason {
      
      ## The material is entirely gone, i.e. there is no physical carrier to bear text information any more. 
      "lost"
      | 
        ## Any physical harm to the surface that entirely ereases information 
        "effaced"
      | 
        ##
        "illegible"
      | 
        ## Where the type of gap is unknown.
        "unknown"
    },
    
    ## (agent) in the case of text omitted because of damage, categorizes the cause of the damage, if it can be identified.
    ## Sample values include: 1] rubbing (rubbing); 2] mildew (mildew); 3] smoke (smoke)
    attribute agent {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
add =
  
  ## (addition) contains letters, words, or phrases inserted in the source text by an author, scribe, or a previous annotator or corrector. [3.5.3. Additions, Deletions, and Omissions]
  element add {
    macro.paraContent,
    att.global.attributes,
    att.transcriptional.attribute.status,
    att.transcriptional.attribute.cause,
    att.transcriptional.attribute.seq,
    att.editLike.attribute.evidence,
    att.editLike.attribute.instant,
    att.typed.attributes,
    att.dimensions.attributes,
    
    ##
    attribute hand {
      
      ##
      "#hand1"
      | 
        ##
        "#hand2"
      | 
        ##
        "#hand3"
      | 
        ##
        "#hand4"
    },
    
    ##
    attribute place {
      
      ##
      "below"
      | 
        ##
        "above"
      | 
        ##
        "right margin"
      | 
        ##
        "left margin"
      | 
        ##
        "central margin"
      | 
        ##
        "top margin"
      | 
        ##
        "bottom margin"
      | 
        ##
        "overleaf"
    },
    empty
  }
del =
  
  ## (deletion) contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector. [3.5.3. Additions, Deletions, and Omissions]
  element del {
    macro.paraContent,
    att.global.attributes,
    att.transcriptional.attribute.status,
    att.transcriptional.attribute.cause,
    att.transcriptional.attribute.seq,
    att.editLike.attribute.evidence,
    att.editLike.attribute.instant,
    att.typed.attribute.subtype,
    att.dimensions.attributes,
    
    ##
    attribute hand {
      
      ##
      "#hand1"
      | 
        ##
        "#hand2"
      | 
        ##
        "#hand3"
    },
    
    ##
    attribute type {
      
      ##
      "exponctuation"
      | 
        ##
        "scraped"
    },
    empty
  }
unclear =
  
  ## (unclear) contains a word, phrase, or passage which cannot be transcribed with certainty because it is illegible or inaudible in the source. [11.3.3.1. Damage, Illegibility, and Supplied Text 3.5.3. Additions, Deletions, and Omissions]
  element unclear {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.rendition.attribute.style,
    att.global.rendition.attribute.rendition,
    att.global.linking.attribute.corresp,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.analytic.attribute.ana,
    att.global.facs.attribute.facs,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.editLike.attributes,
    att.dimensions.attributes,
    
    ##
    attribute cert {
      
      ##
      "high"
      | 
        ##
        "medium"
      | 
        ##
        "low"
      | 
        ##
        "unknown"
    },
    
    ##
    attribute reason {
      
      ##
      "acertain"
      | 
        ##
        "erased"
      | 
        ##
        "faded"
      | 
        ##
        "fold"
      | 
        ##
        "hole"
      | 
        ##
        "rewritten"
      | 
        ##
        "transparence"
      | 
        ##
        "stain"
      | 
        ##
        "stitching"
    },
    
    ##
    attribute agent {
      
      ##
      "smoke"
      | 
        ##
        "mildew"
      | 
        ##
        "rubbing"
      | 
        ##
        "copist"
    }?,
    empty
  }
name =
  
  ## (name, proper noun) contains a proper noun or noun phrase. [3.6.1. Referring Strings]
  element name {
    macro.phraseSeq
    >> s:pattern [
         id = "septSages-name-calendar-check-name-constraint-rule-12"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.personal.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    },
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-name-calendar-calendar-check-name-constraint-rule-13"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
rs =
  
  ## (referencing string) contains a general purpose name or referring string. [13.2.1. Personal Names 3.6.1. Referring Strings]
  element rs {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attribute.role,
    att.naming.attribute.nymRef,
    att.canonical.attribute.ref,
    att.typed.attribute.subtype,
    
    ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
    attribute key { xsd:string },
    
    ##
    attribute type {
      
      ##
      "person"
      | 
        ##
        "place"
    },
    empty
  }
num =
  
  ## (number) contains a number, written in any form. [3.6.3. Numbers and
  ## Measures]
  element num {
    macro.phraseSeq,
    att.global.attributes,
    att.typed.attribute.subtype,
    att.ranging.attributes,
    
    ## indicates the type of numeric value.
    ## Suggested values include: 1] cardinal; 2] ordinal; 3] fraction; 4] percentage
    attribute type {
      
      ## absolute number, e.g. 21, 21.5
      "cardinal"
      | 
        ## ordinal number, e.g. 21st
        "ordinal"
      | 
        ## fraction, e.g. one half or three-quarters
        "fraction"
      | 
        ## a percentage
        "percentage"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## supplies the value of the number in standard form.
    attribute value {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    empty
  }
date =
  
  ## (date) contains a date in any format. [3.6.4. Dates and Times 2.2.4. Publication, Distribution, Licensing, etc. 2.6. The Revision Description 3.12.2.4. Imprint, Size of a Document, and Reprint Information 15.2.3. The Setting Description 13.4. Dates]
  element date {
    (text | model.gLike | model.phrase | model.global)*,
    att.global.attributes,
    att.canonical.attributes,
    att.datable.attributes,
    att.calendarSystem.attributes,
    att.editLike.attributes,
    att.dimensions.attributes,
    att.typed.attributes,
    empty
  }
ref =
  
  ## (reference) defines a reference to another location, possibly modified by additional text or comment. [3.7. Simple Links and Cross-References 16.1. Links]
  element ref {
    macro.paraContent
    >> s:pattern [
         id = "septSages-ref-refAtts-constraint-report-7"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           s:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes @target' and @cRef' may be supplied on "
             s:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.cReferencing.attributes,
    att.declaring.attributes,
    att.global.attributes,
    att.internetMedia.attributes,
    att.pointing.attributes,
    att.typed.attributes,
    empty
  }
head =
  
  ## (heading) contains any type of heading, for example the title of a section, or the heading of a list, glossary, manuscript description, etc. [4.2.1. Headings and Trailers]
  element head {
    (text
     | lg
     | model.gLike
     | model.phrase
     | model.inter
     | model.lLike
     | model.global)*,
    att.global.attribute.xmlid,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.rendition.attribute.style,
    att.global.rendition.attribute.rendition,
    att.global.linking.attribute.corresp,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.analytic.attribute.ana,
    att.global.facs.attribute.facs,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.typed.attribute.subtype,
    att.placement.attributes,
    att.written.attributes,
    
    ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
    attribute n { xsd:string }?,
    
    ##
    attribute type {
      
      ##
      "rubrique"
      | 
        ##
        "explicit"
    }?,
    empty
  }
note =
  
  ## (note) contains a note or annotation. [3.9.1. Notes and Simple Annotation 2.2.6. The Notes Statement 3.12.2.8. Notes and Statement of Language 9.3.5.4. Notes within Entries]
  element note {
    macro.specialPara,
    att.global.attributes,
    att.placement.attributes,
    att.pointing.attributes,
    att.typed.attribute.subtype,
    att.written.attributes,
    att.anchoring.attributes,
    
    ##
    attribute type {
      
      ##
      "apparat"
      | 
        ##
        "ntravail"
      | 
        ##
        "notecritique"
      | 
        ##
        "notelangue"
      | 
        ##
        "tei-header"
    },
    empty
  }
pb =
  
  ## (page beginning) marks the beginning of a new page in a paginated document. [3.11.3. Milestone
  ## Elements]
  element pb {
    empty,
    att.global.attribute.xmlid,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.rendition.attribute.style,
    att.global.rendition.attribute.rendition,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.typed.attribute.subtype,
    att.edition.attributes,
    att.spanning.attributes,
    att.breaking.attributes,
    
    ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
    attribute n { xsd:string },
    
    ## (facsimile) points to one or more images, portions of an image, or surfaces which correspond to the current element.
    attribute facs {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    },
    empty
  }
cb =
  
  ## (column beginning) marks the beginning of a new column of a text on a multi-column page. [3.11.3. Milestone
  ## Elements]
  element cb {
    empty,
    att.global.attribute.xmlid,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.rendition.attribute.style,
    att.global.rendition.attribute.rendition,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.typed.attribute.subtype,
    att.edition.attributes,
    att.spanning.attributes,
    att.breaking.attributes,
    
    ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
    attribute n { xsd:string },
    empty
  }
author =
  
  ## (author) in a bibliographic reference, contains the name(s) of an author, personal or corporate, of a work; for example in the same form as that provided by a recognized bibliographic name authority. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement]
  element author {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-author-calendar-calendar-check-author-constraint-rule-14"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition, recording, or series, where the specialized elements for authors, editors, etc. do not suffice or do not apply. May also be used to encode information about individuals or organizations which have played a role in the production or distribution of a bibliographic work. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element respStmt {
    (resp, name), att.global.attributes, att.canonical.attributes, empty
  }
resp =
  
  ## (responsibility) contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role in the production or distribution of a work. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element resp {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.canonical.attributes,
    att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-resp-calendar-calendar-check-resp-constraint-rule-15"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
title =
  
  ## (title) contains a title for any kind of work. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.5. The Series Statement]
  element title {
    macro.paraContent,
    att.global.attributes,
    att.typed.attribute.subtype,
    att.canonical.attributes,
    att.datable.attributes,
    
    ## classifies the title according to some convenient typology.
    ## Sample values include: 1] main; 2] sub (subordinate); 3] alt (alternate); 4] short; 5] desc (descriptive)
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-title-calendar-calendar-check-title-constraint-rule-16"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    
    ## indicates the bibliographic level for a title, that is, whether it identifies an article, book, journal, series, or unpublished material.
    attribute level {
      
      ## (analytic) the title applies to an analytic item, such as an article, poem, or other work published as part of a larger item.
      "a"
      | 
        ## (monographic) the title applies to a monograph such as a book or other item considered to be a distinct publication, including single volumes of multi-volume works
        "m"
      | 
        ## (journal) the title applies to any serial or periodical publication such as a journal, magazine, or newspaper
        "j"
      | 
        ## (series) the title applies to a series of otherwise distinct publications such as a collection
        "s"
      | 
        ## (unpublished) the title applies to any unpublished material (including theses and dissertations unless published by a commercial press)
        "u"
    }?,
    empty
  }
publisher =
  
  ## (publisher) provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.12.2.4. Imprint, Size of a Document, and Reprint Information 2.2.4. Publication, Distribution, Licensing, etc.]
  element publisher {
    macro.phraseSeq,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
l =
  
  ## (verse line) contains a single, possibly incomplete, line of verse. [3.13.1. Core Tags for Verse 3.13. Passages of Verse or Drama 7.2.5. Speech Contents]
  element l {
    ((text | model.gLike | model.phrase | model.inter | model.global)*)
    >> s:pattern [
         id =
           "septSages-l-abstractModel-structure-l-in-l-constraint-report-8"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:l"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:l[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain lines or lg elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.fragmentable.attributes,
    empty
  }
lg =
  
  ## (line group) contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain, verse paragraph, etc. [3.13.1. Core Tags for Verse 3.13. Passages of Verse or Drama 7.2.5. Speech Contents]
  element lg {
    ((model.divTop | model.global)*,
     (model.lLike
      | model.stageLike
      | model.labelLike
      | model.pPart.transcriptional
      | lg),
     (model.lLike
      | model.stageLike
      | model.labelLike
      | model.pPart.transcriptional
      | model.global
      | lg)*,
     (model.divBottom, model.global*)*)
    >> s:pattern [
         id = "septSages-lg-atleast1oflggapl-constraint-assert-13"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "count(descendant::tei:lg|descendant::tei:l|descendant::tei:gap) > 0"
             "An lg element\x{a}" ~
             "        must contain at least one child l, lg, or gap element."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> s:pattern [
         id =
           "septSages-lg-abstractModel-structure-lg-in-l-constraint-report-9"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:lg[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain line groups.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
textLang =
  
  ## (text language) describes the languages and writing systems identified within the bibliographic work being described, rather than its description. [3.12.2.4. Imprint, Size of a Document, and Reprint Information 10.6.6. Languages and Writing Systems]
  element textLang {
    macro.specialPara,
    att.global.attributes,
    
    ## (main language) supplies a code which identifies the chief language used in the bibliographic work.
    attribute mainLang {
      xsd:language
      | (
         ##
         "")
    }?,
    
    ## (other languages) one or more codes identifying any other languages used in the bibliographic work.
    attribute otherLangs {
      list {
        (xsd:language
         | (
            ##
            ""))*
      }
    }?,
    empty
  }
teiHeader =
  
  ## (TEI header) supplies descriptive and declarative metadata associated with a digital resource or set of resources. [2.1.1. The TEI Header and Its Components 15.1. Varieties of Composite Text]
  element teiHeader {
    (fileDesc, model.teiHeaderPart*, revisionDesc?),
    att.global.attributes,
    empty
  }
fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [2.2. The File Description 2.1.1. The TEI Header and Its Components]
  element fileDesc {
    ((titleStmt, editionStmt?, extent?, publicationStmt), sourceDesc+),
    att.global.attributes,
    empty
  }
titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1. The Title Statement 2.2. The File Description]
  element titleStmt {
    (title+, model.respLike*), att.global.attributes, empty
  }
editionStmt =
  
  ## (edition statement) groups information relating to one edition of a text. [2.2.2. The Edition Statement 2.2. The File Description]
  element editionStmt {
    (edition,
     (respStmt,
      respStmt,
      respStmt,
      respStmt,
      respStmt,
      (respStmt,
       (respStmt,
        (respStmt,
         (respStmt,
          (respStmt,
           (respStmt,
            (respStmt,
             (respStmt, (respStmt, respStmt?)?)?)?)?)?)?)?)?)?)),
    att.global.attributes,
    empty
  }
edition =
  
  ## (edition) describes the particularities of one edition of a text. [2.2.2. The Edition Statement]
  element edition { macro.phraseSeq, att.global.attributes, empty }
extent =
  
  ## (extent) describes the approximate size of a text stored on some carrier medium or of some other object, digital or non-digital, specified in any convenient units. [2.2.3. Type and Extent of File 2.2. The File Description 3.12.2.4. Imprint, Size of a Document, and Reprint Information 10.7.1. Object Description]
  element extent { macro.phraseSeq, att.global.attributes, empty }
publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [2.2.4. Publication, Distribution, Licensing, etc. 2.2. The File Description]
  element publicationStmt {
    ((authority, authority?),
     publisher,
     availability,
     (date,
      (date,
       (date,
        (date,
         (date,
          (date,
           (date,
            (date,
             (date,
              (date,
               (date,
                (date,
                 (date, (date, date?)?)?)?)?)?)?)?)?)?)?)?)?)?),
     (extent,
      (extent,
       (extent,
        (extent,
         (extent,
          (extent,
           (extent,
            (extent,
             (extent,
              (extent,
               (extent,
                (extent,
                 (extent, (extent, extent?)?)?)?)?)?)?)?)?)?)?)?)?)?)),
    att.global.attributes,
    empty
  }
authority =
  
  ## (release authority) supplies the name of a person or other agency responsible for making a work available, other than a publisher or distributor. [2.2.4. Publication, Distribution, Licensing, etc.]
  element authority {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [13.3.1. Basic Principles 2.2.4. Publication, Distribution, Licensing, etc. 2.2.5. The Series Statement 3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element idno {
    (text | model.gLike | idno)*,
    att.global.attributes,
    att.sortable.attributes,
    att.datable.attributes,
    att.typed.attribute.subtype,
    
    ## categorizes the identifier, for example as an ISBN, Social Security number, etc.
    ## Suggested values include: 1] ISBN; 2] ISSN; 3] DOI; 4] URI; 5] VIAF; 6] ESTC; 7] OCLC
    attribute type {
      [
        a:documentation [
          "International Standard Book Number: a 13- or (if assigned prior to 2007) 10-digit identifying number assigned by the publishing industry to a published book or similar item, registered with the "
          ns1:a [
            href = "https://www.isbn-international.org"
            " International ISBN Agency."
          ]
          "\x{a}" ~
          "                  "
        ]
      ]
      "ISBN"
      | 
        ## International Standard Serial Number: an eight-digit number to uniquely identify a serial publication.
        "ISSN"
      | 
        ## Digital Object Identifier: a unique string of letters and numbers assigned to an electronic document.
        "DOI"
      | [
          a:documentation [
            "Uniform Resource Identifier: a string of characters to uniquely identify a resource, following the syntax of "
            ns1:a [
              href = "https://datatracker.ietf.org/doc/html/rfc3986"
              "RFC 3986"
            ]
            "."
          ]
        ]
        "URI"
      | 
        ## A data number in the Virtual Internet Authority File assigned to link different names in catalogs around the world for the same entity.
        "VIAF"
      | 
        ## English Short-Title Catalogue number: an identifying number assigned to a document in English printed in the British Isles or North America before 1801.
        "ESTC"
      | 
        ## OCLC control number (record number) for the union catalog record in WorldCat, a union catalog for member libraries in the Online Computer Library Center global cooperative.
        "OCLC"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-idno-calendar-calendar-check-idno-constraint-rule-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
availability =
  
  ## (availability) supplies information about the availability of a text, for example any restrictions on its use or distribution, its copyright status, any licence applying to it, etc. [2.2.4. Publication, Distribution, Licensing, etc.]
  element availability {
    (model.availabilityPart | model.pLike)+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## (status) supplies a code identifying the current availability of the text.
    attribute status {
      
      ## (free) the text is freely available.
      "free"
      | 
        ## (unknown) the status of the text is unknown.
        "unknown"
      | 
        ## (restricted) the text is not freely available.
        "restricted"
    }?,
    empty
  }
licence =
  
  ## contains information about a licence or other legal agreement applicable to the text. [2.2.4. Publication, Distribution, Licensing, etc.]
  element licence {
    macro.specialPara,
    att.global.attributes,
    att.pointing.attributes,
    att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-licence-calendar-calendar-check-licence-constraint-rule-18"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
sourceDesc =
  
  ## (source description) describes the source(s) from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence. [2.2.7. The Source Description]
  element sourceDesc {
    (model.pLike+
     | (model.biblLike | model.sourceDescPart | model.listLike)+),
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3. The Encoding Description 2.1.1. The TEI Header and Its Components]
  element encodingDesc {
    (model.encodingDescPart | model.pLike)+,
    att.global.attributes,
    empty
  }
projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic file was encoded, together with any other relevant information concerning the process by which it was assembled or collected. [2.3.1. The Project Description 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element projectDesc {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied during the encoding of a text. [2.3.3. The Editorial Practices Declaration 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element editorialDecl {
    (model.pLike | model.editorialDeclPart)+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
correction =
  
  ## (correction principles) states how and under what circumstances corrections have been made in the text. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element correction {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## indicates the degree of correction applied to the text.
    attribute status {
      
      ## the text has been thoroughly checked and proofread.
      "high"
      | 
        ## the text has been checked at least once.
        "medium"
      | 
        ## the text has not been checked.
        "low"
      | 
        ## the correction status of the text is unknown.
        "unknown"
    }?,
    
    ## indicates the method adopted to indicate corrections within the text.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## corrections have been made silently
      "silent"
      | 
        ## corrections have been represented using markup
        "markup"
    }?,
    empty
  }
normalization =
  
  ## (normalization) indicates the extent of normalization or regularization of the original source carried out in converting it to electronic form. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element normalization {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## indicates the method adopted to indicate normalizations within the text.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## normalization made silently
      "silent"
      | 
        ## normalization represented using markup
        "markup"
    }?,
    empty
  }
hyphenation =
  
  ## (hyphenation) summarizes the way in which hyphenation in a source text has been treated in an encoded version of it. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element hyphenation {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## (end-of-line) indicates whether or not end-of-line hyphenation has been retained in a text.
    [ a:defaultValue = "some" ]
    attribute eol {
      
      ## all end-of-line hyphenation has been retained, even though the lineation of the original may not have been.
      "all"
      | 
        ## end-of-line hyphenation has been retained in some cases.
        "some"
      | 
        ## all soft end-of-line hyphenation has been removed: any remaining end-of-line hyphenation should be retained.
        "hard"
      | 
        ## all end-of-line hyphenation has been removed: any remaining hyphenation occurred within the line.
        "none"
    }?,
    empty
  }
segmentation =
  
  ## (segmentation) describes the principles according to which the text has been segmented, for example into sentences, tone-units, graphemic strata, etc. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element segmentation {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
punctuation =
  
  ## specifies editorial practice adopted with respect to punctuation marks in the original. [2.3.3. The Editorial Practices Declaration 3.2. Treatment of Punctuation]
  element punctuation {
    model.pLike*,
    att.declarable.attributes,
    att.global.attributes,
    
    ## indicates whether or not punctation marks have been retained as content within the text.
    attribute marks {
      
      ## no punctuation marks have been retained
      "none"
      | 
        ## some punctuation marks have been retained
        "some"
      | 
        ## all punctuation marks have been retained
        "all"
    }?,
    
    ## indicates the positioning of punctuation marks that are associated with marked up text as being encoded within the element surrounding the text or immediately before or after it.
    attribute placement {
      
      ## punctuation marks found at the start or end of a marked up text component are included within its surrounding element;
      "internal"
      | 
        ## punctuation marks found at the start or end of a marked up text component appear immediately before or after the surrounding element
        "external"
    }?,
    empty
  }
profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a text, specifically the languages and sublanguages used, the situation in which it was produced, the participants and their setting. [2.4. The Profile Description 2.1.1. The TEI Header and Its Components]
  element profileDesc {
    model.profileDescPart*, att.global.attributes, empty
  }
handNote =
  
  ## (note on hand) describes a particular style or hand distinguished within a manuscript. [10.7.2. Writing, Decoration, and Other Notations]
  element handNote {
    macro.specialPara,
    att.global.attributes,
    att.handFeatures.attributes,
    empty
  }
langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc. represented within a text. [2.4.2. Language Usage 2.4. The Profile Description 15.3.2. Declarable Elements]
  element langUsage {
    (model.pLike+ | language+),
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
language =
  
  ## (language) characterizes a single language or sublanguage used within a text. [2.4.2. Language Usage]
  element language {
    macro.phraseSeq.limited,
    att.global.attributes,
    [
      a:documentation [
        "(identifier) Supplies a language code constructed as defined in "
        ns1:a [ href = "https://tools.ietf.org/html/bcp47" "BCP 47" ]
        " which is used to identify the language documented by this element, and which may be referenced by the global "
        ns1:code [ "@xml:lang" ]
        " attribute."
      ]
    ]
    attribute ident {
      xsd:language
      | (
         ##
         "")
    },
    
    ## specifies the approximate percentage of the text which uses this language.
    attribute usage { xsd:nonNegativeInteger }?,
    empty
  }
revisionDesc =
  
  ## (revision description) summarizes the revision history for a file. [2.6. The Revision Description 2.1.1. The TEI Header and Its Components]
  element revisionDesc {
    (change+), att.global.attributes, att.docStatus.attributes, empty
  }
change =
  
  ## (change) documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [2.6. The Revision Description 2.4.1. Creation 11.7. Identifying Changes and Revisions]
  element change {
    macro.specialPara,
    att.ascribed.attributes,
    att.datable.attributes,
    att.docStatus.attributes,
    att.global.attributes,
    att.typed.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-change-calendar-calendar-check-change-constraint-rule-19"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    
    ## (target) points to one or more elements that belong to this change.
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
figure =
  
  ## (figure) groups elements representing or containing graphic information such as an illustration, formula, or figure. [14.4. Specific Elements for Graphic Images]
  element figure {
    (model.headLike
     | model.common
     | figDesc
     | model.graphicLike
     | model.global
     | model.divBottom)*,
    att.global.attributes,
    att.placement.attributes,
    att.typed.attributes,
    att.written.attributes,
    empty
  }
figDesc =
  
  ## (description of figure) contains a brief prose description of the appearance or content of a graphic figure, for use when documenting an image without displaying it. [14.4. Specific Elements for Graphic Images]
  element figDesc { macro.limitedContent, att.global.attributes, empty }
att.global.linking.attributes =
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select
att.global.linking.attribute.corresp =
  
  ## (corresponds) points to elements that correspond to the current element in some way.
  attribute corresp {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.global.linking.attribute.synch =
  
  ## (synchronous) points to elements that are synchronous with the current element.
  attribute synch {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.global.linking.attribute.sameAs =
  
  ## points to an element that is the same as the current element.
  attribute sameAs {
    xsd:anyURI { pattern = "\S+" }
  }?
att.global.linking.attribute.copyOf =
  
  ## points to an element of which the current element is a copy.
  attribute copyOf {
    xsd:anyURI { pattern = "\S+" }
  }?
att.global.linking.attribute.next =
  
  ## points to the next element of a virtual aggregate of which the current element is part.
  attribute next {
    xsd:anyURI { pattern = "\S+" }
  }?
att.global.linking.attribute.prev =
  
  ## (previous) points to the previous element of a virtual aggregate of which the current element is part.
  attribute prev {
    xsd:anyURI { pattern = "\S+" }
  }?
att.global.linking.attribute.exclude =
  
  ## points to elements that are in exclusive alternation with the current element.
  attribute exclude {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.global.linking.attribute.select =
  
  ## selects one or more alternants; if one alternant is selected, the ambiguity or uncertainty is marked as resolved. If more than one alternant is selected, the degree of ambiguity or uncertainty is marked as reduced by the number of alternants not selected.
  attribute select {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
anchor =
  
  ## (anchor point) attaches an identifier to a point within a text, whether or not it corresponds with a textual element. [8.4.2. Synchronization and Overlap 16.5. Correspondence and Alignment]
  element anchor {
    empty, att.global.attributes, att.typed.attributes, empty
  }
seg =
  
  ## (arbitrary segment) represents any segmentation of text below the chunk level. [16.3. Blocks, Segments, and Anchors 6.2. Components of the Verse Line 7.2.5. Speech Contents]
  element seg {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.rendition.attribute.style,
    att.global.linking.attribute.corresp,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.facs.attribute.facs,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.segLike.attributes,
    att.typed.attributes,
    att.written.attributes,
    att.notated.attributes,
    
    ##
    attribute rendition {
      
      ##
      "dialogue"
    }?,
    
    ##
    attribute ana {
      
      ##
      "proverbe"
      | 
        ##
        "discoursEnchassé"
      | 
        ##
        "lettre"
      | 
        ##
        "chanson"
      | 
        ##
        "divergences"
    },
    empty
  }
att.msExcerpt.attributes = att.msExcerpt.attribute.defective
att.msExcerpt.attribute.defective =
  
  ## indicates whether the passage being quoted is defective, i.e. incomplete through loss or damage.
  attribute defective {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
att.msClass.attributes = att.msClass.attribute.class
att.msClass.attribute.class =
  
  ## identifies the text types or classifications applicable to this item by pointing to other elements or resources defining the classification concerned. 
  attribute class {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
msDesc =
  
  ## (manuscript description) contains a description of a single identifiable manuscript or other text-bearing object such as an early printed book. [10.1. Overview]
  element msDesc {
    (msIdentifier, head, p, msContents, physDesc, history)
    >> s:pattern [
         id = "septSages-msDesc-one_ms_singleton_max-constraint-rule-20"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "tei:msContents|tei:physDesc|tei:history|tei:additional"
           "\x{a}" ~
           "               "
           sch:let [ name = "gi" value = "name(.)" ]
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "preceding-sibling::*[ name(.) eq $gi ]                           and                           not( following-sibling::*[ name(.) eq $gi ] )"
             "\x{a}" ~
             "          Only one "
             sch:name [ ]
             " is allowed as a child of "
             sch:value-of [ select = "name(..)" ]
             ".\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.sortable.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    att.docStatus.attributes,
    empty
  }
dimensions =
  
  ## (dimensions) contains a dimensional specification. [10.3.4. Dimensions]
  element dimensions {
    ((model.dimLike)*)
    >> s:pattern [
         id = "septSages-dimensions-duplicateDim-constraint-report-11"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           s:report [
             test = "count(tei:width)> 1"
             "\x{a}" ~
             "        The element "
             s:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "               "
           s:report [
             test = "count(tei:height)> 1"
             "\x{a}" ~
             "        The element "
             s:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "               "
           s:report [
             test = "count(tei:depth)> 1"
             "\x{a}" ~
             "        The element "
             s:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.dimensions.attributes,
    att.typed.attribute.subtype,
    
    ## indicates which aspect of the object is being measured.
    ## Sample values include: 1] leaves; 2] ruled; 3] pricked; 4] written; 5] miniatures; 6] binding; 7] box
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
height =
  
  ## (height) contains a measurement measured along the axis at a right angle to the bottom of the object. [10.3.4. Dimensions]
  element height {
    macro.xtext, att.global.attributes, att.dimensions.attributes, empty
  }
width =
  
  ## (width) contains a measurement of an object along the axis parallel to its bottom, e.g. perpendicular to the spine of a book or codex. [10.3.4. Dimensions]
  element width {
    macro.xtext, att.global.attributes, att.dimensions.attributes, empty
  }
locus =
  
  ## (locus) defines a location within a manuscript, manuscript part, or other object typically as a (possibly discontinuous) sequence of folio references. [10.3.5. References to Locations within a Manuscript]
  element locus {
    (text | model.gLike | hi | locus)*,
    att.global.attributes,
    att.pointing.attributes,
    att.typed.attributes,
    [
      a:documentation [
        "(scheme) identifies the foliation scheme in terms of which the location is being specified by pointing to some "
        ns1:code [ "<foliation>" ]
        " element defining it, or to some other equivalent resource."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    }?,
    
    ## (from) specifies the starting point of the location in a normalized form, typically a page number.
    attribute from {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## (to) specifies the end-point of the location in a normalized form, typically as a page number.
    attribute to {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
locusGrp =
  
  ## (locus group) groups a number of locations which together form a distinct but discontinuous item within a manuscript, manuscript part, or other object. [10.3.5. References to Locations within a Manuscript]
  element locusGrp {
    locus+,
    att.global.attributes,
    [
      a:documentation [
        "(scheme) identifies the foliation scheme in terms of which all the locations contained by the group are specified by pointing to some "
        ns1:code [ "<foliation>" ]
        " element defining it, or to some other equivalent resource."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
msIdentifier =
  
  ## (manuscript identifier) contains the information required to identify the manuscript or similar object being described. [10.4. The Manuscript Identifier]
  element msIdentifier {
    ((placeName?, country?, settlement?, repository?, idno*),
     (msName | altIdentifier)*)
    >> s:pattern [
         id = "septSages-msIdentifier-msId_minimal-constraint-report-14"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:msIdentifier"
           "\x{a}" ~
           "               "
           s:report [
             test =
               "not(parent::tei:msPart) and (local-name(*[1])='idno' or local-name(*[1])='altIdentifier' or normalize-space(.)='')"
             "An msIdentifier must contain either a repository or location."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    empty
  }
repository =
  
  ## (repository) contains the name of a repository within which manuscripts or other objects are stored, possibly forming part of an institution. [10.4. The Manuscript Identifier]
  element repository {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.naming.attributes,
    empty
  }
altIdentifier =
  
  ## (alternative identifier) contains an alternative or former structured identifier used for a manuscript or other object, such as a former catalogue number. [10.4. The Manuscript Identifier]
  element altIdentifier {
    (idno, idno?)
    >> s:pattern [
         id =
           "septSages-altIdentifier-calendar-check-altIdentifier-constraint-rule-21"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.typed.attributes,
    att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-altIdentifier-calendar-calendar-check-altIdentifier-constraint-rule-22"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
msName =
  
  ## (alternative name) contains any form of unstructured alternative name used for a manuscript or other object, such as an ocellus nominum, or nickname. [10.4. The Manuscript Identifier]
  element msName {
    (text | model.gLike | rs | name)*,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
explicit =
  
  ## (explicit) contains the explicit of a item, that is, the closing words of the text proper, exclusive of any rubric or colophon which might follow it. [10.6.1. The msItem and msItemStruct Elements]
  element explicit {
    macro.phraseSeq,
    att.global.attributes,
    att.typed.attributes,
    att.msExcerpt.attributes,
    empty
  }
incipit =
  
  ## contains the incipit of a manuscript or similar object item, that is the opening words of the text proper, exclusive of any rubric which might precede it, of sufficient length to identify the work uniquely; such incipits were, in former times, frequently used a means of reference to a work, in place of a title. [10.6.1. The msItem and msItemStruct Elements]
  element incipit {
    macro.phraseSeq,
    att.global.attributes,
    att.typed.attributes,
    att.msExcerpt.attributes,
    empty
  }
msContents =
  
  ## (manuscript contents) describes the intellectual content of a manuscript, manuscript part, or other object either as a series of paragraphs or as a series of structured manuscript items. [10.6. Intellectual Content]
  element msContents {
    (model.pLike+
     | (textLang?, (msItem | msItemStruct)*)),
    att.global.attributes,
    att.msExcerpt.attributes,
    att.msClass.attributes,
    empty
  }
msItem =
  
  ## (manuscript item) describes an individual work or item within the intellectual content of a manuscript, manuscript part, or other object. [10.6.1. The msItem and msItemStruct Elements]
  element msItem {
    ((locus | locusGrp)*,
     (model.pLike+
      | (model.titlepagePart | model.msItemPart | model.global)+)),
    att.global.attributes,
    att.msExcerpt.attributes,
    att.msClass.attributes,
    empty
  }
msItemStruct =
  
  ## (structured manuscript item) contains a structured description for an individual work or item within the intellectual content of a manuscript, manuscript part, or other object. [10.6.1. The msItem and msItemStruct Elements]
  element msItemStruct {
    ((locus | locusGrp)?,
     (model.pLike+
      | (author*,
         respStmt*,
         title*,
         rubric?,
         incipit?,
         msItemStruct*,
         explicit?,
         decoNote*,
         empty*,
         model.noteLike*,
         textLang?))),
    att.global.attributes,
    att.msExcerpt.attributes,
    att.msClass.attributes,
    empty
  }
rubric =
  
  ## (rubric) contains the text of any rubric or heading attached to a particular manuscript item, that is, a string of words through which a manuscript or other object signals the beginning of a text division, often with an assertion as to its author and title, which is in some way set off from the text itself, typically in red ink, or by use of different size or type of script, or some other such visual device. [10.6.1. The msItem and msItemStruct Elements]
  element rubric {
    macro.phraseSeq,
    att.global.attributes,
    att.typed.attributes,
    att.msExcerpt.attributes,
    empty
  }
physDesc =
  
  ## (physical description) contains a full physical description of a manuscript, manuscript part, or other object optionally subdivided using more specialized elements from the model.physDescPart class. [10.7. Physical Description]
  element physDesc {
    (model.pLike*, objectDesc?, handDesc?, decoDesc?, bindingDesc?),
    att.global.attributes,
    empty
  }
objectDesc =
  
  ## (object description) contains a description of the physical components making up the object which is being described. [10.7.1. Object Description]
  element objectDesc {
    (model.pLike+ | (supportDesc?, layoutDesc?)),
    att.global.attributes,
    
    ## (form) a short project-specific name identifying the physical form of the carrier, for example as a codex, roll, fragment, partial leaf, cutting etc.
    attribute form {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
supportDesc =
  
  ## (support description) groups elements describing the physical support for the written part of a manuscript or other object. [10.7.1. Object Description]
  element supportDesc {
    (model.pLike+ | (support?, extent?, foliation*, condition?)),
    att.global.attributes,
    
    ## (material) a short project-defined name for the material composing the majority of the support
    ## Suggested values include: 1] paper; 2] parch (parchment); 3] mixed
    attribute material {
      
      ##
      "paper"
      | 
        ## (parchment) 
        "parch"
      | 
        ##
        "mixed"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
support =
  
  ## (support) contains a description of the materials etc. which make up the physical support for the written part of a manuscript or other object. [10.7.1. Object Description]
  element support { macro.specialPara, att.global.attributes, empty }
foliation =
  
  ## (foliation) describes the numbering system or systems used to count the leaves or pages in a codex or similar object. [10.7.1.4. Foliation]
  element foliation { macro.specialPara, att.global.attributes, empty }
condition =
  
  ## (condition) contains a description of the physical condition of the manuscript or object. [10.7.1.5. Condition]
  element condition { macro.specialPara, att.global.attributes, empty }
layoutDesc =
  
  ## (layout description) collects the set of layout descriptions applicable to a manuscript or other object. [10.7.2. Writing, Decoration, and Other Notations]
  element layoutDesc {
    (model.pLike+ | layout+), att.global.attributes, empty
  }
layout =
  
  ## (layout) describes how text is laid out on the page or surface of the object, including information about any ruling, pricking, or other evidence of page-preparation techniques. [10.7.2. Writing, Decoration, and Other Notations]
  element layout {
    macro.specialPara,
    att.global.attributes,
    
    ## (columns) specifies the number of columns per page
    attribute columns {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    
    ## (textual streams) indicates the number of streams per page, each of which contains an independent textual stream
    attribute streams {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    
    ## (ruled lines) specifies the number of ruled lines per column
    attribute ruledLines {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    
    ## (written lines) specifies the number of written lines per column
    attribute writtenLines {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    empty
  }
handDesc =
  
  ## (description of hands) contains a description of all the different hands used in a manuscript or other object. [10.7.2. Writing, Decoration, and Other Notations]
  element handDesc {
    (p, (handNote, handNote, handNote)),
    att.global.attributes,
    
    ## (hands) specifies the number of distinct hands identified within the manuscript
    attribute hands { xsd:nonNegativeInteger }?,
    empty
  }
decoDesc =
  [
    a:documentation [
      "(decoration description) contains a description of the decoration of a manuscript or other object, either as in paragraphs, or as one or more "
      ns1:code [ "<decoNote>" ]
      " elements. [10.7.3. Bindings, Seals, and Additional Material]"
    ]
  ]
  element decoDesc {
    (model.pLike+ | decoNote+), att.global.attributes, empty
  }
decoNote =
  
  ## (note on decoration) contains a note describing either a decorative component of a manuscript or other object, or a fairly homogenous class of such components. [10.7.3. Bindings, Seals, and Additional Material]
  element decoNote {
    macro.specialPara,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
bindingDesc =
  [
    a:documentation [
      "(binding description) describes the present and former bindings of a manuscript or other object, either as a series of paragraphs or as a series of distinct "
      ns1:code [ "<binding>" ]
      " elements, one for each binding of the manuscript. [10.7.3.1. Binding Descriptions]"
    ]
  ]
  element bindingDesc {
    ((model.pLike | decoNote | condition)+ | binding+),
    att.global.attributes,
    empty
  }
binding =
  
  ## (binding) contains a description of one binding, i.e. type of covering, boards, etc. applied to a manuscript or other object. [10.7.3.1. Binding Descriptions]
  element binding {
    (model.pLike | condition | decoNote)+,
    att.global.attributes,
    att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-binding-calendar-calendar-check-binding-constraint-rule-23"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    
    ## (contemporary) specifies whether or not the binding is contemporary with the majority of its contents
    attribute contemporary {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    empty
  }
history =
  
  ## (history) groups elements describing the full history of a manuscript, manuscript part, or other object. [10.8. History]
  element history {
    (model.pLike+ | (origin?, acquisition?)),
    att.global.attributes,
    empty
  }
origin =
  
  ## (origin) contains any descriptive or other information concerning the origin of a manuscript, manuscript part, or other object. [10.8. History]
  element origin {
    macro.specialPara,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-origin-calendar-calendar-check-origin-constraint-rule-24"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
acquisition =
  
  ## (acquisition) contains any descriptive or other information concerning the process by which a manuscript or manuscript part or other object entered the holding institution. [10.8. History]
  element acquisition {
    macro.specialPara,
    att.global.attributes,
    att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-acquisition-calendar-calendar-check-acquisition-constraint-rule-25"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
att.datable.custom.attributes =
  att.datable.custom.attribute.when-custom,
  att.datable.custom.attribute.notBefore-custom,
  att.datable.custom.attribute.notAfter-custom,
  att.datable.custom.attribute.from-custom,
  att.datable.custom.attribute.to-custom,
  att.datable.custom.attribute.datingPoint,
  att.datable.custom.attribute.datingMethod
att.datable.custom.attribute.when-custom =
  
  ## supplies the value of a date or time in some custom standard form.
  attribute when-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
att.datable.custom.attribute.notBefore-custom =
  
  ## specifies the earliest possible date for the event in some custom standard form.
  attribute notBefore-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
att.datable.custom.attribute.notAfter-custom =
  
  ## specifies the latest possible date for the event in some custom standard form.
  attribute notAfter-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
att.datable.custom.attribute.from-custom =
  
  ## indicates the starting point of the period in some custom standard form.
  attribute from-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
att.datable.custom.attribute.to-custom =
  
  ## indicates the ending point of the period in some custom standard form.
  attribute to-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
att.datable.custom.attribute.datingPoint =
  
  ## supplies a pointer to some location defining a named point in time with reference to which the datable item is understood to have occurred
  attribute datingPoint {
    xsd:anyURI { pattern = "\S+" }
  }?
att.datable.custom.attribute.datingMethod =
  [
    a:documentation [
      "supplies a pointer to a "
      ns1:code [ "<calendar>" ]
      " element or other means of interpreting the values of the custom dating attributes."
    ]
  ]
  attribute datingMethod {
    xsd:anyURI { pattern = "\S+" }
  }?
model.persNamePart = notAllowed
model.persNamePart_alternation = notAllowed
model.persNamePart_sequence = empty
model.persNamePart_sequenceOptional = empty
model.persNamePart_sequenceOptionalRepeatable = empty
model.persNamePart_sequenceRepeatable = notAllowed
att.datable.iso.attributes =
  att.datable.iso.attribute.when-iso,
  att.datable.iso.attribute.notBefore-iso,
  att.datable.iso.attribute.notAfter-iso,
  att.datable.iso.attribute.from-iso,
  att.datable.iso.attribute.to-iso
att.datable.iso.attribute.when-iso =
  
  ## supplies the value of a date or time in a standard form.
  attribute when-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.notBefore-iso =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.notAfter-iso =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.from-iso =
  
  ## indicates the starting point of the period in standard form.
  attribute from-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.to-iso =
  
  ## indicates the ending point of the period in standard form.
  attribute to-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including one or more of the person's forenames, surnames, honorifics, added names, etc. [13.2.1. Personal Names]
  element persName {
    macro.phraseSeq
    >> s:pattern [
         id =
           "septSages-persName-calendar-check-persName-constraint-rule-26"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.personal.attribute.full,
    att.personal.attribute.sort,
    att.naming.attribute.role,
    att.naming.attribute.nymRef,
    att.canonical.attribute.ref,
    att.typed.attributes,
    
    ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
    attribute key { xsd:string },
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-persName-calendar-calendar-check-persName-constraint-rule-27"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
placeName =
  
  ## (place name) Indication des noms de lieux dans la narration sous cette balise en vue de l'index de lieux [13.2.3. Place Names]
  element placeName {
    macro.phraseSeq
    >> s:pattern [
         id =
           "septSages-placeName-calendar-check-placeName-constraint-rule-28"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.datable.attributes,
    att.editLike.attributes,
    att.global.attributes,
    att.personal.attribute.full,
    att.personal.attribute.sort,
    att.naming.attribute.role,
    att.naming.attribute.nymRef,
    att.canonical.attribute.ref,
    att.typed.attributes,
    
    ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
    attribute key { xsd:string },
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-placeName-calendar-calendar-check-placeName-constraint-rule-29"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
country =
  
  ## (country) contains the name of a geo-political unit, such as a nation, country, colony, or commonwealth, larger than or administratively superior to a region and smaller than a bloc. [13.2.3. Place Names]
  element country {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-country-calendar-calendar-check-country-constraint-rule-30"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
settlement =
  
  ## (settlement) contains the name of a settlement such as a city, town, or village identified as a single geo-political or administrative unit. [13.2.3. Place Names]
  element settlement {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> s:pattern [
         id =
           "septSages-settlement-calendar-calendar-check-settlement-constraint-rule-31"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
model.rdgLike = rdg
model.rdgPart = notAllowed
att.witnessed.attributes = att.witnessed.attribute.wit
att.witnessed.attribute.wit =
  
  ## (witness or witnesses) contains a space-delimited list of one or more pointers indicating the witnesses which attest to a given reading.
  attribute wit {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.textCritical.attributes =
  att.written.attributes,
  att.textCritical.attribute.type,
  att.textCritical.attribute.cause,
  att.textCritical.attribute.varSeq,
  att.textCritical.attribute.require,
  att.typed.attribute.subtype
att.textCritical.attribute.type =
  
  ## classifies the reading according to some useful typology.
  ## Sample values include: 1] substantive (substantive); 2] orthographic (orthographic)
  attribute type {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.textCritical.attribute.cause =
  
  ## classifies the cause for the variant reading, according to any appropriate typology of possible origins.
  ## Sample values include: 1] homeoteleuton; 2] homeoarchy; 3] paleographicConfusion; 4] haplography; 5] dittography; 6] falseEmendation
  attribute cause {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.textCritical.attribute.varSeq =
  
  ## (variant sequence) provides a number indicating the position of this reading in a sequence, when there is reason to presume a sequence to the variants. 
  attribute varSeq { xsd:nonNegativeInteger }?
att.textCritical.attribute.require =
  
  ## points to other readings that are required when adopting the current reading or lemma.
  attribute require {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
app =
  
  ## (apparatus entry) contains one entry in a critical apparatus, with an optional lemma and usually one or more readings or notes on the relevant passage. [12.1.1. The Apparatus Entry]
  element app {
    (lem?, (model.rdgLike | model.noteLike | rdgGrp)*),
    att.global.attributes,
    att.typed.attribute.subtype,
    
    ## classifies the variation contained in this element according to some convenient typology.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## identifies the beginning of the lemma in the base text.
    attribute from {
      xsd:anyURI { pattern = "\S+" }
    }?,
    
    ## identifies the endpoint of the lemma in the base text.
    attribute to {
      xsd:anyURI { pattern = "\S+" }
    }?,
    
    ## (location) indicates the location of the variation, when the location-referenced method of apparatus markup is used.
    attribute loc {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
lem =
  
  ## (lemma) contains the lemma, or base text, of a textual variation. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element lem {
    (text
     | model.divLike
     | model.divPart
     | model.gLike
     | model.phrase
     | model.inter
     | model.global
     | model.rdgPart)*,
    att.global.attributes,
    att.textCritical.attributes,
    att.witnessed.attributes,
    empty
  }
rdg =
  
  ## (reading) contains a single reading within a textual variation. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element rdg {
    (text
     | model.divLike
     | model.divPart
     | model.gLike
     | model.phrase
     | model.inter
     | model.global
     | model.rdgPart)*,
    att.global.attributes,
    att.textCritical.attributes,
    att.witnessed.attributes,
    empty
  }
rdgGrp =
  
  ## (reading group) within a textual variation, groups two or more readings perceived to have a genetic relationship or other affinity. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element rdgGrp {
    (lem?, (model.rdgLike | model.noteLike | rdgGrp)*)
    >> s:pattern [
         id = "septSages-rdgGrp-only1lem-constraint-assert-28"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:rdgGrp"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "count(tei:lem) < 2"
             "Only one <lem> element may appear within a <rdgGrp>"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.textCritical.attributes,
    empty
  }
listWit =
  
  ## (witness list) lists definitions for all the witnesses referred to by a critical apparatus, optionally grouped hierarchically. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element listWit {
    (model.headLike?, (witness | listWit)+),
    att.global.attributes,
    att.sortable.attributes,
    empty
  }
witness =
  
  ## (witness) contains either a description of a single witness referred to within the critical apparatus, or a list of witnesses which is to be referred to by a single sigil. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element witness {
    (text | model.limitedPhrase | model.inter | note)*,
    att.global.attributes,
    att.sortable.attributes,
    empty
  }
TEI =
  [
    a:documentation [
      "(TEI document) contains a single TEI-conformant document, combining a single TEI header with one or more members of the model.resource class. Multiple "
      ns1:code [ "<TEI>" ]
      " elements may be combined within a "
      ns1:code [ "<TEI>" ]
      " (or "
      ns1:code [ "<teiCorpus>" ]
      ") element. [4. Default Text Structure 15.1. Varieties of Composite Text]"
    ]
  ]
  element TEI {
    (teiHeader,
     ((model.resource+, TEI*) | TEI+))
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ]
    >> sch:ns [
         prefix = "rna"
         uri = "http://relaxng.org/ns/compatibility/annotations/1.0"
       ]
    >> sch:ns [
         prefix = "sch"
         uri = "http://purl.oclc.org/dsdl/schematron"
       ]
    >> sch:ns [
         prefix = "sch1x"
         uri = "http://www.ascc.net/xml/schematron"
       ],
    att.global.attributes,
    att.typed.attributes,
    
    ## specifies the version number of the TEI Guidelines against which this document is valid.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
\text =
  
  ## (text) contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element text {
    (model.global*, (body), model.global*),
    att.global.attributes,
    att.declaring.attributes,
    att.typed.attributes,
    att.written.attributes,
    empty
  }
body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter. [4. Default Text Structure]
  element body {
    (model.global*,
     (model.divTop, (model.global | model.divTop)*)?,
     (model.divGenLike, (model.global | model.divGenLike)*)?,
     ((model.divLike, (model.global | model.divGenLike)*)+
      | (model.div1Like, (model.global | model.divGenLike)*)+
      | (((model.common), model.global*)+,
         ((model.divLike, (model.global | model.divGenLike)*)+
          | (model.div1Like, (model.global | model.divGenLike)*)+)?)),
     (model.divBottom, model.global*)*),
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
\div =
  
  ## (text division) contains a subdivision of the front, body, or back of a text. [4.1. Divisions of the Body]
  element div {
    ((model.divTop | model.global)*,
     ((((model.divLike | model.divGenLike), model.global*)+
       | (((model.common), model.global*)+,
          ((model.divLike | model.divGenLike), model.global*)*)),
      (model.divBottom, model.global*)*)?)
    >> s:pattern [
         id =
           "septSages-div-abstractModel-structure-div-in-l-or-lg-constraint-report-15"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:l or ancestor::tei:lg) and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div, unless div is a descendant of floatingText.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> s:pattern [
         id =
           "septSages-div-abstractModel-structure-div-in-ab-or-p-constraint-report-16"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:p or ancestor::tei:ab) and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "        Abstract model violation: p and ab may not contain higher-level structural elements such as div, unless div is a descendant of floatingText.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    att.written.attributes,
    empty
  }
att.global.facs.attributes = att.global.facs.attribute.facs
att.global.facs.attribute.facs =
  
  ## (facsimile) points to one or more images, portions of an image, or surfaces which correspond to the current element.
  attribute facs {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.global.change.attributes = att.global.change.attribute.change
att.global.change.attribute.change =
  [
    a:documentation [
      "points to one or more "
      ns1:code [ "<change>" ]
      " elements documenting a state or revision campaign to which the element bearing this attribute and its children have been assigned by the encoder."
    ]
  ]
  attribute change {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
damage =
  
  ## (damage) contains an area of damage to the text witness. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element damage {
    macro.paraContent,
    att.global.attributes,
    att.typed.attributes,
    att.damaged.attributes,
    empty
  }
handNotes =
  [
    a:documentation [
      "contains one or more "
      ns1:code [ "<handNote>" ]
      " elements documenting the different hands identified within the source texts. [11.3.2.1. Document Hands]"
    ]
  ]
  element handNotes { handNote+, att.global.attributes, empty }
handShift =
  
  ## (handwriting shift) marks the beginning of a sequence of text written in a new hand, or the beginning of a scribal stint. [11.3.2.1. Document Hands]
  element handShift {
    empty,
    att.global.attributes,
    att.handFeatures.attributes,
    [
      a:documentation [
        "indicates a "
        ns1:code [ "<handNote>" ]
        " element describing the hand concerned."
      ]
    ]
    attribute new {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
subst =
  
  ## (substitution) groups one or more deletions (or surplus text) with one or more additions when the combination is to be regarded as a single intervention in the text. [11.3.1.5. Substitutions]
  element subst {
    ((add | surplus | del | model.milestoneLike)+)
    >> s:pattern [
         id = "septSages-subst-substContents1-constraint-assert-29"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:subst"
           "\x{a}" ~
           "               "
           s:assert [
             test =
               "child::tei:add and (child::tei:del or child::tei:surplus)"
             "\x{a}" ~
             "                  "
             s:name [ ]
             " must have at least one child add and at least one child del or surplus"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.transcriptional.attributes,
    att.dimensions.attributes,
    empty
  }
supplied =
  
  ## (supplied) signifies text supplied by the transcriber or editor for any reason; for example because the original cannot be read due to physical damage, or because of an obvious omission by the author or scribe. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element supplied {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.rendition.attribute.style,
    att.global.rendition.attribute.rendition,
    att.global.linking.attribute.corresp,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.analytic.attribute.ana,
    att.global.facs.attribute.facs,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.editLike.attributes,
    att.dimensions.attributes,
    
    ##
    attribute cert {
      
      ##
      "low"
      | 
        ##
        "high"
    }?,
    
    ##
    attribute reason {
      
      ##
      "damage"
      | 
        ##
        "omitted"
      | 
        ##
        "missing"
    },
    empty
  }
surplus =
  
  ## (surplus) marks text present in the source which the editor believes to be superfluous or redundant. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element surplus {
    macro.paraContent,
    att.global.attributes,
    att.editLike.attributes,
    att.dimensions.attributes,
    
    ##
    attribute reason {
      
      ##
      "repeated"
      | 
        ##
        "syntaxe"
      | 
        ##
        "morpho"
    },
    empty
  }
att.global.analytic.attributes = att.global.analytic.attribute.ana
att.global.analytic.attribute.ana =
  [
    a:documentation [
      "(analysis) indicates one or more elements containing interpretations of the element on which the "
      ns1:code [ "@ana" ]
      " attribute appears."
    ]
  ]
  attribute ana {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
c =
  
  ## (character) represents a character. [17.1. Linguistic Segment Categories]
  element c {
    macro.xtext,
    att.global.attributes,
    att.segLike.attributes,
    att.typed.attributes,
    att.notated.attributes,
    empty
  }
start = TEI
